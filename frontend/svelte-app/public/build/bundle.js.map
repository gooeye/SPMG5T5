{"version":3,"file":"bundle.js","sources":["../../../node_modules/svelte/internal/index.mjs","../../../node_modules/svelte/store/index.mjs","../../src/Apply.svelte","../../src/WithdrawalRequest.svelte","../../src/HRViewTimetable.svelte","../../src/authstore.js","../../src/Login.svelte","../../src/ManagerTimetable.svelte","../../../node_modules/@event-calendar/core/src/lib/a11y.js","../../../node_modules/@event-calendar/core/src/lib/actions.js","../../../node_modules/@event-calendar/core/src/lib/date.js","../../../node_modules/@event-calendar/core/src/lib/utils.js","../../../node_modules/@event-calendar/core/src/lib/debounce.js","../../../node_modules/@event-calendar/core/src/lib/dom.js","../../../node_modules/@event-calendar/core/src/lib/view.js","../../../node_modules/@event-calendar/core/src/lib/events.js","../../../node_modules/@event-calendar/core/src/lib/options.js","../../../node_modules/@event-calendar/core/src/lib/resources.js","../../../node_modules/@event-calendar/core/src/lib/stores.js","../../../node_modules/@event-calendar/core/src/storage/state.js","../../../node_modules/@event-calendar/core/src/storage/options.js","../../../node_modules/@event-calendar/core/src/storage/stores.js","../../../node_modules/@event-calendar/core/src/Buttons.svelte","../../../node_modules/@event-calendar/core/src/Toolbar.svelte","../../../node_modules/@event-calendar/core/src/Auxiliary.svelte","../../../node_modules/@event-calendar/core/src/Calendar.svelte","../../../node_modules/@event-calendar/day-grid/src/Header.svelte","../../../node_modules/@event-calendar/day-grid/src/Event.svelte","../../../node_modules/@event-calendar/day-grid/src/Popup.svelte","../../../node_modules/@event-calendar/day-grid/src/Day.svelte","../../../node_modules/@event-calendar/day-grid/src/Week.svelte","../../../node_modules/@event-calendar/day-grid/src/Body.svelte","../../../node_modules/@event-calendar/day-grid/src/index.js","../../../node_modules/@event-calendar/day-grid/src/stores.js","../../src/EmployeeTimetable.svelte","../../src/CancelRequest.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","<script>\n    import { createEventDispatcher } from \"svelte\";\n    const dispatch = createEventDispatcher();\n\n    let step = 1;\n    let selectedDate = \"\";\n    let isDateValid = false;\n    let applicationType = \"one-time\";\n    let selectedDays = [];\n    const daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"];\n    let selectedDayOption = \"full-day\";\n    let showPartDayOptions = false;\n    let selectedHalfDay = \"\";\n    let reason = \"\";\n    let reviewMode = false;\n\n    // Date validation to ensure selected date is at least 24 hours in the future\n    const validateDate = () => {\n        let now = new Date();\n        let selected = new Date(selectedDate);\n        let diffInMilliseconds = selected.getTime() - now.getTime();\n        let diffInHours = diffInMilliseconds / (1000 * 60 * 60);\n        isDateValid = diffInHours >= 24;\n    };\n\n    const nextStep = () => {\n        if (step === 1 && (!selectedDate || !isDateValid)) {\n            alert(\"Please select a valid date at least 24 hours from now.\");\n            return;\n        }\n        if (step === 2 && applicationType === \"weekly\" && selectedDays.length === 0) {\n            alert(\"Please select at least one day.\");\n            return;\n        }\n        if (step === 3 && selectedDayOption === \"part-day\" && !selectedHalfDay) {\n            alert(\"Please select AM or PM for Part Day.\");\n            return;\n        }\n        if (step === 4 && reason.trim() === \"\") {\n            alert(\"Please provide a reason.\");\n            return;\n        }\n        if (step === 4) {\n            reviewMode = true;\n        } else {\n            step += 1;\n        }\n    };\n\n    const prevStep = () => {\n        step -= 1;\n    };\n\n    const handleApplicationTypeChange = (e) => {\n        applicationType = e.target.value;\n        if (applicationType === \"one-time\") {\n            selectedDays = [];\n        }\n    };\n\n    const toggleDay = (day) => {\n        if (selectedDays.includes(day)) {\n            selectedDays = selectedDays.filter((d) => d !== day);\n        } else if (selectedDays.length < 3) {\n            selectedDays = [...selectedDays, day];\n        } else {\n            alert(\"You can only select up to 3 days.\");\n        }\n    };\n\n    const handleKeyPress = (event, day) => {\n        if (event.key === 'Enter' || event.key === ' ') {\n            event.preventDefault();\n            toggleDay(day);\n        }\n    };\n\n    const handleDayOptionChange = (e) => {\n        selectedDayOption = e.target.value;\n        showPartDayOptions = selectedDayOption === \"part-day\";\n        if (selectedDayOption !== \"part-day\") {\n            selectedHalfDay = \"\";\n        }\n    };\n\n    const selectHalfDay = (period) => {\n        selectedHalfDay = period;\n    };\n\n    const handleModalClick = (e) => {\n        if (e.target === e.currentTarget) {\n            dispatch(\"close\");\n        }\n    };\n\n    const handleModalKeydown = (e) => {\n        if (e.key === 'Escape') {\n            dispatch(\"close\");\n        }\n    };\n\n    const handleSubmit = async () => {\n        const applicationData = {\n            employee_id: \"YOUR_EMPLOYEE_ID\",\n            date: selectedDate,\n            type: applicationType,\n            days: selectedDays,\n            halfDay: selectedDayOption === \"full-day\" ? \"Full Day\" : selectedHalfDay,\n            reason: reason,\n            status: \"Pending\",\n        };\n\n        try {\n            const response = await fetch(\"http://127.0.0.1:5000/create_arrangement\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(applicationData),\n            });\n\n            if (response.ok) {\n                alert(\"Application submitted successfully!\");\n                dispatch(\"close\");\n            } else {\n                const data = await response.json();\n                alert(`Error: ${data.error}`);\n            }\n        } catch (error) {\n            alert(`Submission failed: ${error.message}`);\n        }\n    };\n\n    const backToEdit = () => {\n        reviewMode = false;\n    };\n</script>\n\n<div \n    class=\"modal-backdrop\" \n    on:click={handleModalClick}\n    on:keydown={handleModalKeydown}\n    role=\"dialog\"\n    aria-modal=\"true\"\n    aria-labelledby=\"modal-title\"\n>\n    <div \n        class=\"modal-content\" \n        role=\"document\"\n    >\n        <button \n            class=\"close-button\" \n            on:click={() => dispatch(\"close\")}\n            aria-label=\"Close modal\"\n        >\n            &times;\n        </button>\n\n        {#if reviewMode}\n            <div class=\"review-box\">\n                <h3>Review your application</h3>\n                <p><strong>Date:</strong> {selectedDate}</p>\n                <p><strong>Application Type:</strong> {applicationType}</p>\n                {#if applicationType === \"weekly\"}\n                    <p><strong>Selected Days:</strong> {selectedDays.join(\", \")}</p>\n                {/if}\n                <p><strong>Time:</strong> {selectedDayOption === \"full-day\" ? \"Full Day\" : selectedHalfDay}</p>\n                <p><strong>Reason:</strong> {reason}</p>\n            </div>\n            <div class=\"buttons\">\n                <button class=\"back-button\" on:click={backToEdit}>Back to Edit</button>\n                <button class=\"next-button\" on:click={handleSubmit}>Submit</button>\n            </div>\n        {:else}\n            {#if step === 1}\n                <h2 id=\"modal-title\">Apply for WFH Arrangement</h2>\n                <div class=\"form-group\">\n                    <label for=\"wfh-date\">Select WFH Date:</label>\n                    <input \n                        type=\"date\" \n                        id=\"wfh-date\" \n                        bind:value={selectedDate} \n                        on:change={validateDate}\n                        min={new Date().toISOString().split('T')[0]} \n                    />\n                </div>\n            {:else if step === 2}\n                <h3>Application Type</h3>\n                <div class=\"form-group\">\n                    <label>\n                        <input \n                            type=\"radio\" \n                            name=\"applicationType\" \n                            value=\"one-time\" \n                            checked={applicationType === \"one-time\"} \n                            on:change={handleApplicationTypeChange}\n                        /> \n                        One-time application\n                    </label>\n                    <label>\n                        <input \n                            type=\"radio\" \n                            name=\"applicationType\" \n                            value=\"weekly\" \n                            checked={applicationType === \"weekly\"} \n                            on:change={handleApplicationTypeChange}\n                        /> \n                        Repeated weekly\n                    </label>\n                    {#if applicationType === \"weekly\"}\n                        <div class=\"days-selection\">\n                            <h4>Select Days (max 3):</h4>\n                            <div role=\"group\" aria-label=\"Day selection\" class=\"days-container\">\n                                {#each daysOfWeek as day}\n                                    <button \n                                        class=\"day-option {selectedDays.includes(day) ? 'selected' : ''}\"\n                                        on:click={() => toggleDay(day)}\n                                        on:keypress={(e) => handleKeyPress(e, day)}\n                                        aria-pressed={selectedDays.includes(day)}\n                                    >\n                                        {day}\n                                    </button>\n                                {/each}\n                            </div>\n                            <p class=\"selected-days\">Selected: {selectedDays.join(\", \") || \"None\"}</p>\n                        </div>\n                    {/if}\n                </div>\n            {:else if step === 3}\n                <h3>Work Arrangement</h3>\n                <div class=\"form-group\">\n                    <label>\n                        <input \n                            type=\"radio\" \n                            name=\"dayOption\" \n                            value=\"full-day\" \n                            checked={selectedDayOption === \"full-day\"} \n                            on:change={handleDayOptionChange}\n                        /> \n                        Full Day\n                    </label>\n                    <label>\n                        <input \n                            type=\"radio\" \n                            name=\"dayOption\" \n                            value=\"part-day\" \n                            checked={selectedDayOption === \"part-day\"} \n                            on:change={handleDayOptionChange}\n                        /> \n                        Part Day\n                    </label>\n                    {#if showPartDayOptions}\n                        <div role=\"group\" aria-label=\"Part day selection\" class=\"part-day-options\">\n                            <button \n                                class=\"day-option {selectedHalfDay === 'AM' ? 'selected' : ''}\"\n                                on:click={() => selectHalfDay(\"AM\")}\n                                aria-pressed={selectedHalfDay === 'AM'}\n                            >\n                                AM\n                            </button>\n                            <button \n                                class=\"day-option {selectedHalfDay === 'PM' ? 'selected' : ''}\"\n                                on:click={() => selectHalfDay(\"PM\")}\n                                aria-pressed={selectedHalfDay === 'PM'}\n                            >\n                                PM\n                            </button>\n                        </div>\n                    {/if}\n                </div>\n            {:else if step === 4}\n                <h3>Reason</h3>\n                <div class=\"form-group\">\n                    <textarea \n                        bind:value={reason} \n                        placeholder=\"Please provide a reason for your WFH request\"\n                        aria-label=\"Reason for WFH request\"\n                        rows=\"4\"\n                    ></textarea>\n                </div>\n            {/if}\n            <div class=\"buttons\">\n                {#if step > 1}\n                    <button class=\"back-button\" on:click={prevStep}>Back</button>\n                {/if}\n                <button class=\"next-button\" on:click={nextStep}>\n                    {step === 4 ? 'Review' : 'Next'}\n                </button>\n            </div>\n        {/if}\n    </div>\n</div>\n\n<style>\n    .modal-backdrop {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100vw;\n        height: 100vh;\n        background-color: rgba(0, 0, 0, 0.5);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 1000;\n    }\n\n    .modal-content {\n        background-color: white;\n        border-radius: 8px;\n        width: 90%;\n        max-width: 500px;\n        padding: 24px;\n        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n        position: relative;\n        max-height: 90vh;\n        overflow-y: auto;\n    }\n\n    .close-button {\n        position: absolute;\n        top: 12px;\n        right: 12px;\n        background-color: transparent;\n        border: none;\n        font-size: 24px;\n        cursor: pointer;\n        padding: 4px 8px;\n        border-radius: 4px;\n    }\n\n    .close-button:hover {\n        background-color: #f0f0f0;\n    }\n\n    .form-group {\n        margin: 16px 0;\n    }\n\n    .form-group label {\n        display: block;\n        margin: 8px 0;\n    }\n\n    .buttons {\n        display: flex;\n        justify-content: space-between;\n        margin-top: 24px;\n    }\n\n    .next-button,\n    .back-button {\n        padding: 10px 20px;\n        font-size: 16px;\n        border: none;\n        border-radius: 5px;\n        cursor: pointer;\n        transition: background-color 0.2s;\n    }\n\n    .next-button {\n        background-color: #4caf50;\n        color: white;\n    }\n\n    .next-button:hover {\n        background-color: #45a049;\n    }\n\n    .back-button {\n        background-color: #f44336;\n        color: white;\n    }\n\n    .back-button:hover {\n        background-color: #d32f2f;\n    }\n\n    .days-container {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 8px;\n        margin: 12px 0;\n    }\n\n    .day-option {\n        padding: 8px 16px;\n        border-radius: 4px;\n        background-color: #e0e0e0;\n        border: none;\n        cursor: pointer;\n        transition: all 0.2s;\n    }\n\n    .day-option:hover {\n        background-color: #d0d0d0;\n    }\n\n    .day-option.selected {\n        background-color: #4caf50;\n        color: white;\n    }\n\n    .part-day-options {\n        display: flex;\n        gap: 12px;\n        margin-top: 12px;\n    }\n\n    textarea {\n        width: 100%;\n        min-height: 100px;\n        padding: 12px;\n        border-radius: 4px;\n        border: 1px solid #ccc;\n        resize: vertical;\n    }\n\n    .review-box {\n        background-color: #f7f7f7;\n        padding: 16px;\n        border-radius: 4px;\n        margin-bottom: 20px;\n    }\n\n    .selected-days {\n        margin-top: 8px;\n        font-size: 0.9em;\n        color: #666;\n    }\n\n    @media (max-width: 480px) {\n        .modal-content {\n            padding: 16px;\n            width: 95%;\n        }\n\n        .days-container {\n            justify-content: center;\n        }\n\n        .buttons {\n            flex-direction: column-reverse;\n            gap: 12px;\n        }\n\n        .buttons button {\n            width: 100%;\n        }\n    }\n</style>\n","<script>\n    import { onMount } from \"svelte\";\n    import config from './config.json';\n    let withdrawalRequests = [];\n    let loading = false;\n    let error = null;\n    \n    // Get employee ID from your auth system\n    const employeeId = localStorage.getItem('employeeId');\n\n    async function fetchWithdrawalRequests() {\n        loading = true;\n        error = null;\n        try {\n            const response = await fetch(`${config.base_url}/get_user_applications?eid=${employeeId}`, {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            console.log(\"Fetched data:\", data);\n\n            // Filter for Approved applications\n            withdrawalRequests = data.filter(app => \n                app.status === 'Approved'\n            );\n\n        } catch (err) {\n            error = \"Failed to load applications. Please try again later.\";\n            console.error(\"Error fetching applications:\", err);\n        } finally {\n            loading = false;\n        }\n    }\n\n    async function requestWithdrawal(applicationId) {\n        try {\n            const response = await fetch(`${config.base_url}/withdraw_application/${applicationId}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    employee_id: employeeId\n                })\n            });\n            \n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || 'Failed to submit withdrawal request');\n            }\n\n            const result = await response.json();\n            alert('Withdrawal request submitted successfully');\n            await fetchWithdrawalRequests(); // Refresh the list\n            \n        } catch (err) {\n            alert(err.message || 'Error submitting withdrawal request. Please try again.');\n            console.error(\"Error requesting withdrawal:\", err);\n        }\n    }\n\n    function formatDate(dateValue) {\n        if (!dateValue) return 'N/A';\n        \n        try {\n            let date;\n            if (typeof dateValue === 'object' && dateValue.seconds) {\n                date = new Date(dateValue.seconds * 1000);\n            } else if (typeof dateValue === 'string') {\n                date = new Date(dateValue);\n            } else {\n                date = new Date(dateValue);\n            }\n            \n            if (isNaN(date.getTime())) {\n                return 'Invalid Date';\n            }\n            \n            return date.toLocaleDateString('en-US', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n            });\n        } catch (err) {\n            console.error('Error formatting date:', err);\n            return 'Invalid Date';\n        }\n    }\n\n    onMount(fetchWithdrawalRequests);\n</script>\n\n<div class=\"container\">\n    <h1>Withdrawal Requests</h1>\n\n    {#if loading}\n        <div class=\"loading\">Loading applications...</div>\n    {:else if error}\n        <div class=\"error\">{error}</div>\n    {:else if withdrawalRequests.length === 0}\n        <div class=\"empty-state\">\n            <h3>No Applications Available</h3>\n            <p>You have no approved applications available for withdrawal at this time.</p>\n        </div>\n    {:else}\n        {#each withdrawalRequests as application}\n            <div class=\"withdrawal-card\">\n                <div class=\"card-header\">\n                    <h3>Application Details</h3>\n                    <span class=\"status {application.status}\">\n                        {application.status}\n                    </span>\n                </div>\n                \n                <div class=\"card-body\">\n                    <p><strong>Date:</strong> {formatDate(application.date)}</p>\n                    <p><strong>Type:</strong> {application.type || 'N/A'}</p>\n                    {#if application.half_day}\n                        <p><strong>Half Day:</strong> Yes</p>\n                    {/if}\n                    {#if application.days}\n                        <p><strong>Days:</strong> {application.days}</p>\n                    {/if}\n                    {#if application.reason}\n                        <p><strong>Reason:</strong> {application.reason}</p>\n                    {/if}\n                </div>\n\n                <div class=\"card-footer\">\n                    {#if application.status === 'Approved'}\n                        <button \n                            on:click={() => requestWithdrawal(application.id)}\n                            class=\"withdrawal-button\">\n                            Request Withdrawal\n                        </button>\n                    {:else if application.status === 'Withdrawn'}\n                        <span class=\"withdrawn-message\">\n                            Withdrawal request submitted\n                        </span>\n                    {/if}\n                </div>\n            </div>\n        {/each}\n    {/if}\n</div>\n\n<style>\n    /* Styles remain unchanged */\n    .container {\n        max-width: 800px;\n        margin: 0 auto;\n        padding: 1rem;\n    }\n\n    h1 {\n        text-align: center;\n        color: #2C3E50;\n        margin-bottom: 2rem;\n    }\n\n    .withdrawal-card {\n        background: white;\n        border: 1px solid #e1e1e1;\n        border-radius: 8px;\n        padding: 1.5rem;\n        margin-bottom: 1rem;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n\n    .card-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 1rem;\n    }\n\n    .card-header h3 {\n        margin: 0;\n        color: #2C3E50;\n    }\n\n    .status {\n        padding: 0.25rem 0.75rem;\n        border-radius: 999px;\n        font-size: 0.875rem;\n        font-weight: 500;\n        text-transform: capitalize;\n    }\n\n    .status.Approved {\n        background-color: #4CAF50;\n        color: white;\n    }\n\n    .status.Withdrawn {\n        background-color: #F44336;\n        color: white;\n    }\n\n    .card-body {\n        margin-bottom: 1rem;\n    }\n\n    .card-body p {\n        margin: 0.5rem 0;\n        color: #555;\n    }\n\n    .card-footer {\n        margin-top: 1rem;\n        display: flex;\n        justify-content: flex-end;\n    }\n\n    .withdrawal-button {\n        background-color: #f44336;\n        color: white;\n        padding: 0.5rem 1rem;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        font-weight: 500;\n        transition: background-color 0.2s;\n    }\n\n    .withdrawal-button:hover {\n        background-color: #d32f2f;\n    }\n\n    .withdrawn-message {\n        color: #F44336;\n        font-weight: 500;\n    }\n\n    .loading, .error, .empty-state {\n        text-align: center;\n        padding: 2rem;\n        color: #666;\n        background: #f5f5f5;\n        border-radius: 8px;\n        margin: 1rem 0;\n    }\n\n    .error {\n        color: #f44336;\n        background: #ffebee;\n    }\n\n    .empty-state {\n        padding: 3rem 1rem;\n    }\n\n    .empty-state h3 {\n        color: #2C3E50;\n        margin-bottom: 1rem;\n    }\n\n    .empty-state p {\n        color: #666;\n    }\n\n    :global(.ec-events) {\n        margin: 0 4px 0 4px !important;\n    } \n</style>","<script>\n    import { onMount, onDestroy } from 'svelte';\n    import config from './config.json';\n    \n    let departments = [];\n    let allEmployees = []; // Store all employees\n    let showDetailModal = false;\n    let selectedEmployee = null;\n    let searchQuery = '';\n    let selectedDepartment = 'All';\n    let selectedStatus = 'All';\n    let selectedDateRange = 'today';\n    let startDate = '';\n    let endDate = ''; \n    let loading = true;\n    let error = null;\n    let isRequestInProgress = false;\n\n    let showFilters = true;\n    let activeTab = 'all';\n\n    const API_BASE_URL = config.base_url || 'http://localhost:5000';\n\n    function getFilterState() {\n        return {\n            department: selectedDepartment,\n            status: selectedStatus,\n            search: searchQuery,\n            dateRange: selectedDateRange,\n            startDate,\n            endDate\n        };\n    }\n\n    // Client-side filtering function\n    function filterEmployees(employees, filters) {\n        return employees.filter(employee => {\n            // Department filter\n            if (filters.department && filters.department !== 'All' && \n                employee.department !== filters.department) {\n                return false;\n            }\n            \n            // Status filter\n            if (filters.status && filters.status !== 'All' && \n                employee.status !== filters.status.toLowerCase()) {\n                return false;\n            }\n            \n            // Search filter\n            if (filters.search) {\n                const searchTerm = filters.search.toLowerCase();\n                const searchFields = [\n                    employee.id,\n                    employee.name,\n                    employee.department,\n                    employee.email,\n                    employee.country,\n                    employee.position\n                ];\n                return searchFields.some(field => \n                    String(field).toLowerCase().includes(searchTerm)\n                );\n            }\n            \n            return true;\n        });\n    }\n\n    // Computed properties using filtered data\n    $: filteredEmployees = allEmployees.length ? \n        filterEmployees(allEmployees, getFilterState()) : [];\n    $: officeEmployees = filteredEmployees.filter(emp => emp.status === 'office');\n    $: remoteEmployees = filteredEmployees.filter(emp => emp.status === 'remote');\n    $: totalEmployees = filteredEmployees.length;\n    $: officePercentage = totalEmployees ? \n        (officeEmployees.length / totalEmployees * 100).toFixed(1) : 0;\n    $: remotePercentage = totalEmployees ? \n        (remoteEmployees.length / totalEmployees * 100).toFixed(1) : 0;\n\n    async function fetchInitialData() {\n        if (isRequestInProgress) return;\n        \n        try {\n            isRequestInProgress = true;\n            loading = true;\n\n            // Fetch all data at once\n            const [deptResponse, empResponse] = await Promise.all([\n                fetch(`${API_BASE_URL}/departments`),\n                fetch(`${API_BASE_URL}/employees`)\n            ]);\n\n            if (!deptResponse.ok || !empResponse.ok) {\n                throw new Error('Failed to fetch initial data');\n            }\n\n            const deptData = await deptResponse.json();\n            const empData = await empResponse.json();\n\n            departments = deptData.departments;\n            allEmployees = empData.employees;\n            error = null;\n            \n        } catch (err) {\n            console.error('Error fetching initial data:', err);\n            error = err.message || 'Failed to load data';\n            departments = [];\n            allEmployees = [];\n        } finally {\n            loading = false;\n            isRequestInProgress = false;\n        }\n    }\n\n    function toggleFilters() {\n        showFilters = !showFilters;\n    }\n\n    async function updateEmployeeStatus(employeeId, newStatus) {\n        try {\n            const response = await fetch(`${API_BASE_URL}/employee/${employeeId}/status`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ status: newStatus })\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to update status');\n            }\n\n            // Refresh employee data after status update\n            await fetchInitialData();\n        } catch (err) {\n            console.error('Error updating status:', err);\n            error = err.message;\n        }\n    }\n\n    onMount(async () => {\n        await fetchInitialData();\n    });\n\n    onDestroy(() => {\n        // Cleanup if needed\n    });\n</script>\n\n<main class=\"dashboard\">\n    <div class=\"container\">\n        <div class=\"header\">\n            <div class=\"header-text\">\n                <h1>Staff Schedule Dashboard</h1>\n                <p>Manage and track employee work locations</p>\n            </div>\n            <button on:click={toggleFilters} class=\"filter-toggle\">\n                <svg class=\"icon\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\" />\n                </svg>\n                {showFilters ? 'Hide Filters' : 'Show Filters'}\n            </button>\n        </div>\n\n        {#if loading}\n            <div class=\"loading\">\n                <div class=\"spinner\"></div>\n                <p>Loading data...</p>\n            </div>\n        {:else if error}\n            <div class=\"error\">\n                <svg class=\"icon\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <p>{error}</p>\n            </div>\n        {:else}\n            {#if showFilters}\n                <div class=\"filters\">\n                    <div class=\"filter-grid\">\n                        <div class=\"filter-item\">\n                            <label for=\"search-staff\">Search Staff</label>\n                            <div class=\"search-input\">\n                                <input\n                                    id=\"search-staff\"\n                                    type=\"text\"\n                                    bind:value={searchQuery}\n                                    placeholder=\"Name or department...\"\n                                />\n                                <svg class=\"icon\" viewBox=\"0 0 24 24\">\n                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                                </svg>\n                            </div>\n                        </div>\n\n                        <div class=\"filter-item\">\n                            <label for=\"department-filter\">Department</label>\n                            <select id=\"department-filter\" bind:value={selectedDepartment}>\n                                <option value=\"All\">All Departments</option>\n                                {#each departments as dept}\n                                    <option value={dept}>{dept}</option>\n                                {/each}\n                            </select>\n                        </div>\n\n                        <div class=\"filter-item\">\n                            <label for=\"status-filter\">Status</label>\n                            <select id=\"status-filter\" bind:value={selectedStatus}>\n                                <option value=\"All\">All Statuses</option>\n                                <option value=\"office\">In Office</option>\n                                <option value=\"remote\">Remote</option>\n                            </select>\n                        </div>\n\n                        <div class=\"filter-item\">\n                            <label for=\"date-range-filter\">Date Range</label>\n                            <select id=\"date-range-filter\" bind:value={selectedDateRange}>\n                                <option value=\"today\">Today</option>\n                                <option value=\"custom\">Custom Range</option>\n                            </select>\n                            \n                            {#if selectedDateRange === 'custom'}\n                                <div class=\"date-range\">\n                                    <input\n                                        type=\"date\"\n                                        bind:value={startDate}\n                                    />\n                                    <input\n                                        type=\"date\"\n                                        bind:value={endDate}\n                                    />\n                                </div>\n                            {/if}\n                        </div>\n                    </div>\n                </div>\n            {/if}\n\n            <div class=\"stats\">\n                <div class=\"stat-card\">\n                    <div>\n                        <p class=\"stat-label\">Total Staff</p>\n                        <p class=\"stat-value\">{totalEmployees}</p>\n                    </div>\n                    <div class=\"stat-icon\">\n                        <svg viewBox=\"0 0 24 24\">\n                            <path d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n                        </svg>\n                    </div>\n                </div>\n\n                <div class=\"stat-card\">\n                    <div>\n                        <p class=\"stat-label\">In Office</p>\n                        <p class=\"stat-value office\">{officeEmployees.length}</p>\n                        <p class=\"stat-percentage\">{officePercentage}% of total</p>\n                    </div>\n                    <div class=\"stat-icon office\">\n                        <svg viewBox=\"0 0 24 24\">\n                            <path d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                        </svg>\n                    </div>\n                </div>\n\n                <div class=\"stat-card\">\n                    <div>\n                        <p class=\"stat-label\">Remote</p>\n                        <p class=\"stat-value remote\">{remoteEmployees.length}</p>\n                        <p class=\"stat-percentage\">{remotePercentage}% of total</p>\n                    </div>\n                    <div class=\"stat-icon remote\">\n                        <svg viewBox=\"0 0 24 24\">\n                            <path d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"tabs\">\n                <button \n                    class=\"tab {activeTab === 'all' ? 'active' : ''}\"\n                    on:click={() => activeTab = 'all'}\n                >\n                    All Staff\n                </button>\n                <button \n                    class=\"tab {activeTab === 'office' ? 'active' : ''}\"\n                    on:click={() => activeTab = 'office'}\n                >\n                    In Office\n                </button>\n                <button \n                    class=\"tab {activeTab === 'remote' ? 'active' : ''}\"\n                    on:click={() => activeTab = 'remote'}\n                >\n                    Remote\n                </button>\n            </div>\n\n            <div class=\"employee-grid\">\n                {#each activeTab === 'all' ? filteredEmployees : \n                       activeTab === 'office' ? officeEmployees : \n                       remoteEmployees as employee (employee.id)}\n                    <div class=\"employee-card\">\n                        <div class=\"employee-info\">\n                            <div class=\"employee-details\">\n                                <p class=\"employee-name\">{employee.name}</p>\n                                <p class=\"employee-dept\">{employee.department} • {employee.team}</p>\n                                <p class=\"employee-email\">{employee.email}</p>\n                                <div class=\"status-wrapper\">\n                                    <span class=\"status-badge {employee.status}\">\n                                        {employee.status}\n                                    </span>\n                                    <button \n                                        class=\"status-toggle\"\n                                        on:click={() => updateEmployeeStatus(\n                                            employee.id, \n                                            employee.status === 'office' ? 'remote' : 'office'\n                                        )}\n                                    >\n                                        Toggle Status\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                {/each}\n            </div>\n        {/if}\n    </div>\n</main>\n\n<style>\n    /* All the existing styles remain the same */\n    .status-wrapper {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        margin-top: 0.5rem;\n    }\n\n    .status-toggle {\n        padding: 0.25rem 0.5rem;\n        font-size: 0.75rem;\n        border-radius: 0.375rem;\n        background-color: #f3f4f6;\n        border: 1px solid #e5e7eb;\n        cursor: pointer;\n    }\n\n    .status-toggle:hover {\n        background-color: #e5e7eb;\n    }\n</style>","import { writable } from 'svelte/store';\r\n\r\nconst jwtToken = writable(localStorage.getItem('jwt') || '');\r\nconst userClaims = writable({});\r\n\r\n// Function to decode the JWT and extract claims\r\nfunction decodeJWT(token) {\r\n    if (!token) return {};\r\n\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const jsonPayload = decodeURIComponent(\r\n        atob(base64)\r\n            .split('')\r\n            .map(c => `%${('00' + c.charCodeAt(0).toString(16)).slice(-2)}`)\r\n            .join('')\r\n    );\r\n\r\n    return JSON.parse(jsonPayload);\r\n}\r\n\r\n// Initialize claims if token exists\r\nuserClaims.set(decodeJWT(localStorage.getItem('jwt')) || {});\r\n\r\n// Subscribe to jwtToken updates to store it and update claims\r\njwtToken.subscribe((token) => {\r\n    if (token) {\r\n        localStorage.setItem('jwt', token);\r\n        userClaims.set(decodeJWT(token)); // Update claims\r\n        console.log(\"Token added\");\r\n        console.log(userClaims)\r\n    } else {\r\n        localStorage.removeItem('jwt');\r\n        userClaims.set({});\r\n        console.log(\"Token removed\");\r\n    }\r\n});\r\n\r\nexport { jwtToken, userClaims };\r\n","<script>\r\n  import {createEventDispatcher} from 'svelte';\r\n  import config from './config.json';\r\n  import { jwtToken } from './authstore';\r\n\r\n  const dispatch = createEventDispatcher();\r\n  let email = '';\r\n  let password = '';\r\n\r\n  const loginUser = async () => {\r\n    try {\r\n      const response = await fetch(`${config.base_url}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error logging in:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    // jwtToken.set('eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c');\r\n    e.preventDefault();\r\n    const token = await loginUser();\r\n    if (token) {\r\n      console.log(token);\r\n      jwtToken.set(token); // Save JWT token in the store\r\n    }\r\n  };\r\n</script>\r\n\r\n<div class=\"hide-overflow\">\r\n  <div class=\"page-container\">\r\n    <div class=\"form-container\">\r\n      <form on:submit={handleSubmit}>\r\n        <h1>Log in</h1>\r\n        <label class=\"text-field\">\r\n          Email:\r\n          <input type=\"email\" bind:value={email} placeholder=\"Input your email\" required />\r\n        </label>\r\n        <label class=\"text-field\">\r\n          Password:\r\n          <input type=\"password\" bind:value={password} placeholder=\"Input your password\" required />\r\n        </label>\r\n        <button type=\"submit\">Log in</button>\r\n      </form>\r\n      <div class=\"form-splash\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .hide-overflow {\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    margin: 0;\r\n  }\r\n  .page-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    &::after {\r\n      \r\n      content: \"\";\r\n      display: block;\r\n      width: 200%;\r\n      height: 200%;\r\n      position: absolute;\r\n      top: -50%;\r\n      left: -50%;\r\n      background-image: url(\"/form-splash.jpg\");\r\n      background-size: contain;\r\n      transform: rotate(180deg);\r\n      filter: blur(128px);\r\n      z-index: -1;\r\n    }\r\n  }\r\n  .form-container {\r\n    width: 960px;\r\n    height: 640px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: row;\r\n    border-radius: 8px;\r\n    -webkit-box-shadow: 2px 2px 12px 2px rgba(0,0,0,0.64);\r\n    -moz-box-shadow: 2px 2px 12px 2px rgba(0,0,0,0.64);\r\n    box-shadow: 2px 2px 12px 2px rgba(0,0,0,0.64);\r\n    overflow: hidden;\r\n    background-color: aliceblue;\r\n  }\r\n  .form-splash {\r\n    display: block;\r\n    background-image: url(\"/form-splash.jpg\");\r\n    background-size: cover;\r\n    height: 100%;\r\n    width: 60%;\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    padding: 36px;\r\n    flex-grow: 1;\r\n  }\r\n  label {\r\n    font-size: 14px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 4px 0;\r\n    &.text-field {\r\n      flex-direction: column;\r\n      align-items: stretch;\r\n    }\r\n  }\r\n  input {\r\n    padding: 16px;\r\n    font-size: 12px;\r\n    margin: 4px 0;\r\n    border-radius: 8px;\r\n    &[type=checkbox] {\r\n      margin: 0 4px 0 0;\r\n      accent-color: #3e6b71;\r\n    }\r\n  }\r\n  button {\r\n    margin-top: 16px;\r\n    padding: 12px;\r\n    font-size: 14px;\r\n    transition: all .2s;\r\n    border: none;\r\n    border-radius: 8px;\r\n    background-color: #3e6b71;\r\n    color: aliceblue;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n</style>","<script>\n  import { onMount, onDestroy } from 'svelte';\n  import { jwtToken, userClaims } from './authstore';\n  import Login from './Login.svelte';\n  \n  let selectedStatus = 'All';\n  let selectedDateRange = 'today';\n  let startDate = '';\n  let endDate = ''; \n  let employees = [];\n  let loading = true;\n  let error = null;\n  let isRequestInProgress = false;\n  let currentDepartment = '';\n\n  let showFilters = true;\n  let activeTab = 'all';\n  let searchQuery = '';\n\n  const API_BASE_URL = 'http://localhost:5000';\n\n  // Subscribe to auth store changes\n  $: isAuthenticated = !!$jwtToken;\n  $: currentUser = $userClaims;\n\n  function getFilterState() {\n      return {\n          status: selectedStatus,\n          search: searchQuery,\n          dateRange: selectedDateRange,\n          startDate,\n          endDate\n      };\n  }\n\n  // Move the filtering logic to computed properties\n  $: filteredEmployees = employees;\n  $: officeEmployees = filteredEmployees.filter(emp => emp.status === 'office');\n  $: remoteEmployees = filteredEmployees.filter(emp => emp.status === 'remote');\n  $: totalEmployees = filteredEmployees.length;\n  $: officePercentage = totalEmployees ? (officeEmployees.length / totalEmployees * 100).toFixed(1) : 0;\n  $: remotePercentage = totalEmployees ? (remoteEmployees.length / totalEmployees * 100).toFixed(1) : 0;\n\n  async function fetchEmployees(filters = {}) {\n      if (isRequestInProgress || !isAuthenticated) return;\n      \n      try {\n          isRequestInProgress = true;\n          loading = true;\n\n          const params = new URLSearchParams();\n          if (filters.status && filters.status !== 'All') {\n              params.append('status', filters.status.toLowerCase());\n          }\n          if (filters.search) {\n              params.append('search', filters.search);\n          }\n\n          const response = await fetch(`${API_BASE_URL}/employees?${params.toString()}`, {\n              headers: {\n                  'Authorization': `Bearer ${$jwtToken}`\n              }\n          });\n\n          if (!response.ok) {\n              const errorData = await response.json();\n              throw new Error(errorData.error || 'Failed to fetch employees');\n          }\n\n          const data = await response.json();\n          employees = data.employees;\n          \n          // Set the department name from the first employee (they're all in the same department)\n          if (employees.length > 0) {\n              currentDepartment = employees[0].department;\n          }\n          \n          error = null;\n          \n      } catch (err) {\n          console.error('Error fetching employees:', err);\n          error = err.message || 'Failed to load employee data';\n          employees = [];\n      } finally {\n          loading = false;\n          isRequestInProgress = false;\n      }\n  }\n\n  async function updateEmployeeStatus(employeeId, newStatus) {\n      if (!isAuthenticated) return;\n      \n      try {\n          const response = await fetch(`${API_BASE_URL}/employee/${employeeId}/status`, {\n              method: 'PUT',\n              headers: {\n                  'Authorization': `Bearer ${$jwtToken}`,\n                  'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({ status: newStatus })\n          });\n\n          if (!response.ok) {\n              const errorData = await response.json();\n              throw new Error(errorData.error || 'Failed to update status');\n          }\n\n          // Refresh employee list after successful update\n          await fetchEmployees(getFilterState());\n          \n      } catch (err) {\n          console.error('Error updating status:', err);\n          error = err.message;\n      }\n  }\n\n  function toggleFilters() {\n      showFilters = !showFilters;\n  }\n\n  let filterTimeout;\n  function debouncedFetchEmployees() {\n      clearTimeout(filterTimeout);\n      filterTimeout = setTimeout(() => {\n          if (!isRequestInProgress && isAuthenticated) {\n              fetchEmployees(getFilterState());\n          }\n      }, 500);\n  }\n\n  // Handle individual filter changes\n  $: if (searchQuery !== undefined) debouncedFetchEmployees();\n  $: if (selectedStatus !== undefined) debouncedFetchEmployees();\n  $: if (selectedDateRange !== undefined) debouncedFetchEmployees();\n\n  // Watch for auth changes and refetch data when authenticated\n  $: if (isAuthenticated) {\n      fetchEmployees(getFilterState());\n  }\n\n  onMount(async () => {\n      if (isAuthenticated) {\n          try {\n              await fetchEmployees(getFilterState());\n          } catch (err) {\n              console.error('Error in initialization:', err);\n              error = err.message;\n          }\n      }\n  });\n\n  onDestroy(() => {\n      clearTimeout(filterTimeout);\n  });\n</script>\n\n{#if !isAuthenticated}\n    <Login />\n{:else}\n    <main class=\"dashboard\">\n        <div class=\"container\">\n            <div class=\"header\">\n                <div class=\"header-text\">\n                    <h1>{currentDepartment} Department Dashboard</h1>\n                    <p>Welcome, {currentUser?.name || 'Manager'}</p>\n                    <p class=\"subtitle\">Manage and track employee work locations</p>\n                </div>\n                <div class=\"header-actions\">\n                    <button on:click={toggleFilters} class=\"filter-toggle\">\n                        <svg class=\"icon\" viewBox=\"0 0 24 24\">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\" />\n                        </svg>\n                        {showFilters ? 'Hide Filters' : 'Show Filters'}\n                    </button>\n                </div>\n            </div>\n\n            {#if loading}\n                <div class=\"loading\">\n                    <div class=\"spinner\"></div>\n                    <p>Loading data...</p>\n                </div>\n            {:else if error}\n                <div class=\"error\">\n                    <svg class=\"icon\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    <p>{error}</p>\n                </div>\n            {:else}\n                {#if showFilters}\n                    <div class=\"filters\">\n                        <div class=\"filter-grid\">\n                            <div class=\"filter-item\">\n                                <label for=\"search-staff\">Search Staff</label>\n                                <div class=\"search-input\">\n                                    <input\n                                        id=\"search-staff\"\n                                        type=\"text\"\n                                        bind:value={searchQuery}\n                                        placeholder=\"Search by name, email...\"\n                                    />\n                                    <svg class=\"icon\" viewBox=\"0 0 24 24\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                                    </svg>\n                                </div>\n                            </div>\n\n                            <div class=\"filter-item\">\n                                <label for=\"status-filter\">Status</label>\n                                <select id=\"status-filter\" bind:value={selectedStatus}>\n                                    <option value=\"All\">All Statuses</option>\n                                    <option value=\"office\">In Office</option>\n                                    <option value=\"remote\">Remote</option>\n                                </select>\n                            </div>\n\n                            <div class=\"filter-item\">\n                                <label for=\"date-range-filter\">Date Range</label>\n                                <select id=\"date-range-filter\" bind:value={selectedDateRange}>\n                                    <option value=\"today\">Today</option>\n                                    <option value=\"custom\">Custom Range</option>\n                                </select>\n                                \n                                {#if selectedDateRange === 'custom'}\n                                    <div class=\"date-range\">\n                                        <input\n                                            type=\"date\"\n                                            bind:value={startDate}\n                                        />\n                                        <input\n                                            type=\"date\"\n                                            bind:value={endDate}\n                                        />\n                                    </div>\n                                {/if}\n                            </div>\n                        </div>\n                    </div>\n                {/if}\n\n                <div class=\"stats\">\n                    <div class=\"stat-card\">\n                        <div>\n                            <p class=\"stat-label\">Total Staff</p>\n                            <p class=\"stat-value\">{totalEmployees}</p>\n                        </div>\n                        <div class=\"stat-icon\">\n                            <svg viewBox=\"0 0 24 24\">\n                                <path d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n                            </svg>\n                        </div>\n                    </div>\n\n                    <div class=\"stat-card\">\n                        <div>\n                            <p class=\"stat-label\">In Office</p>\n                            <p class=\"stat-value office\">{officeEmployees.length}</p>\n                            <p class=\"stat-percentage\">{officePercentage}% of total</p>\n                        </div>\n                        <div class=\"stat-icon office\">\n                            <svg viewBox=\"0 0 24 24\">\n                                <path d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                            </svg>\n                        </div>\n                    </div>\n\n                    <div class=\"stat-card\">\n                        <div>\n                            <p class=\"stat-label\">Remote</p>\n                            <p class=\"stat-value remote\">{remoteEmployees.length}</p>\n                            <p class=\"stat-percentage\">{remotePercentage}% of total</p>\n                        </div>\n                        <div class=\"stat-icon remote\">\n                            <svg viewBox=\"0 0 24 24\">\n                                <path d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n                            </svg>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"tabs\">\n                    <button \n                        class=\"tab {activeTab === 'all' ? 'active' : ''}\"\n                        on:click={() => activeTab = 'all'}\n                    >\n                        All Staff\n                    </button>\n                    <button \n                        class=\"tab {activeTab === 'office' ? 'active' : ''}\"\n                        on:click={() => activeTab = 'office'}\n                    >\n                        In Office\n                    </button>\n                    <button \n                        class=\"tab {activeTab === 'remote' ? 'active' : ''}\"\n                        on:click={() => activeTab = 'remote'}\n                    >\n                        Remote\n                    </button>\n                </div>\n\n                <div class=\"employee-grid\">\n                    {#each activeTab === 'all' ? filteredEmployees : \n                           activeTab === 'office' ? officeEmployees : \n                           remoteEmployees as employee (employee.id)}\n                        <div class=\"employee-card\">\n                            <div class=\"employee-info\">\n                                <div class=\"employee-details\">\n                                    <p class=\"employee-name\">{employee.name}</p>\n                                    <p class=\"employee-dept\">{employee.team}</p>\n                                    <p class=\"employee-email\">{employee.email}</p>\n                                    <div class=\"status-section\">\n                                        <span class=\"status-badge {employee.status || 'office'}\">\n                                            {employee.status || 'office'}\n                                        </span>\n                                        <div class=\"status-actions\">\n                                            <button \n                                                class=\"status-button {employee.status === 'office' ? 'active' : ''}\"\n                                                on:click={() => updateEmployeeStatus(employee.id, 'office')}\n                                            >\n                                                Office\n                                            </button>\n                                            <button \n                                                class=\"status-button {employee.status === 'remote' ? 'active' : ''}\"\n                                                on:click={() => updateEmployeeStatus(employee.id, 'remote')}\n                                            >\n                                                Remote\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    {/each}\n                </div>\n            {/if}\n        </div>\n    </main>\n{/if}\n\n<style>\n  /* Previous styles remain the same */\n\n  .header-actions {\n      display: flex;\n      gap: 1rem;\n      align-items: center;\n  }\n\n  .subtitle {\n      color: #6b7280;\n      font-size: 0.875rem;\n  }\n\n  .status-section {\n      margin-top: 0.75rem;\n      display: flex;\n      flex-direction: column;\n      gap: 0.5rem;\n  }\n\n  .status-actions {\n      display: flex;\n      gap: 0.5rem;\n  }\n\n  .status-button {\n      flex: 1;\n      padding: 0.375rem;\n      font-size: 0.75rem;\n      border: 1px solid #e5e7eb;\n      border-radius: 0.375rem;\n      background: white;\n      cursor: pointer;\n      transition: all 0.2s;\n  }\n\n  .status-button:hover {\n      background: #f9fafb;\n  }\n\n  .status-button.active {\n      border-color: transparent;\n  }\n\n  .status-button.active:first-child {\n      background: #dcfce7;\n      color: #16a34a;\n  }\n\n  .status-button.active:last-child {\n      background: #dbeafe;\n      color: #2563eb;\n  }\n\n  .dashboard {\n      min-height: 100vh;\n      background-color: #f9fafb;\n  }\n\n  .container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 2rem;\n  }\n\n  .header {\n      display: flex;\n      justify-content: space-between;\n      align-items: start;\n      margin-bottom: 2rem;\n  }\n\n  .header-text {\n      flex: 1;\n  }\n\n  .header h1 {\n      font-size: 1.875rem;\n      font-weight: bold;\n      color: #111827;\n      margin-bottom: 0.25rem;\n  }\n\n  .header p {\n      color: #6b7280;\n      margin-top: 0.25rem;\n  }\n\n  .icon {\n      width: 20px;\n      height: 20px;\n      fill: none;\n      stroke: currentColor;\n  }\n\n  .filter-toggle {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      padding: 0.5rem 1rem;\n      background: white;\n      border: 1px solid #e5e7eb;\n      border-radius: 0.5rem;\n      cursor: pointer;\n      transition: all 0.2s;\n  }\n\n  .filter-toggle:hover {\n      background: #f9fafb;\n      border-color: #d1d5db;\n  }\n\n  .loading {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 16rem;\n      background: white;\n      border-radius: 0.75rem;\n      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  }\n\n  .spinner {\n      width: 3rem;\n      height: 3rem;\n      border: 4px solid #e5e7eb;\n      border-top-color: #3b82f6;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n  }\n\n  @keyframes spin {\n      to { \n          transform: rotate(360deg); \n      }\n  }\n\n  .error {\n      display: flex;\n      align-items: center;\n      gap: 0.75rem;\n      padding: 1rem;\n      background: #fee2e2;\n      border: 1px solid #ef4444;\n      border-radius: 0.5rem;\n      color: #b91c1c;\n  }\n\n  .filters {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 0.75rem;\n      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n      margin-bottom: 2rem;\n  }\n\n  .filter-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n      gap: 1rem;\n  }\n\n  .filter-item {\n      display: flex;\n      flex-direction: column;\n      gap: 0.5rem;\n  }\n\n  .filter-item label {\n      font-size: 0.875rem;\n      font-weight: 500;\n      color: #374151;\n  }\n\n  .filter-item input,\n  .filter-item select {\n      padding: 0.5rem;\n      border: 1px solid #e5e7eb;\n      border-radius: 0.375rem;\n      width: 100%;\n      font-size: 0.875rem;\n  }\n\n  .filter-item input:focus,\n  .filter-item select:focus {\n      outline: none;\n      border-color: #3b82f6;\n      box-shadow: 2px solid rgba(59, 130, 246, 0.5);\n  }\n\n  .search-input {\n      position: relative;\n  }\n\n  .search-input input {\n      padding-left: 2.5rem;\n  }\n\n  .search-input .icon {\n      position: absolute;\n      left: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      width: 16px;\n      height: 16px;\n  }\n\n  .date-range {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n  }\n\n  .employee-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n      gap: 1rem;\n  }\n\n  .employee-card {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 0.75rem;\n      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n      transition: all 0.2s;\n  }\n\n  .employee-card:hover {\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n      transform: translateY(-2px);\n  }\n\n  .employee-info {\n      display: flex;\n      gap: 1rem;\n      align-items: start;\n  }\n\n  .employee-details {\n      flex: 1;\n      min-width: 0;\n  }\n\n  .employee-name {\n      font-size: 1rem;\n      font-weight: 600;\n      color: #111827;\n      margin-bottom: 0.25rem;\n  }\n\n  .employee-dept {\n      font-size: 0.875rem;\n      color: #6b7280;\n      margin-bottom: 0.25rem;\n  }\n\n  .employee-email {\n      font-size: 0.875rem;\n      color: #6b7280;\n      margin-bottom: 0.5rem;\n      word-break: break-all;\n  }\n\n  .status-badge {\n      display: inline-flex;\n      padding: 0.25rem 0.75rem;\n      border-radius: 9999px;\n      font-size: 0.75rem;\n      font-weight: 500;\n      text-transform: capitalize;\n  }\n\n  .status-badge.office {\n      background: #dcfce7;\n      color: #16a34a;\n  }\n\n  .status-badge.remote {\n      background: #dbeafe;\n      color: #2563eb;\n  }\n\n  @media (max-width: 768px) {\n      .container {\n          padding: 1rem;\n      }\n\n      .header {\n          flex-direction: column;\n          gap: 1rem;\n      }\n\n      .header-actions {\n          width: 100%;\n      }\n\n      .filter-toggle {\n          width: 100%;\n          justify-content: center;\n      }\n\n      .stats {\n          grid-template-columns: 1fr;\n      }\n\n      .employee-grid {\n          grid-template-columns: 1fr;\n      }\n\n      .filter-grid {\n          grid-template-columns: 1fr;\n      }\n\n      .status-actions {\n          flex-direction: row;\n      }\n  }\n\n  @media (max-width: 480px) {\n      .header h1 {\n          font-size: 1.5rem;\n      }\n\n      .tabs {\n          flex-direction: column;\n      }\n\n      .tab {\n          width: 100%;\n          padding: 0.75rem;\n      }\n  }\n</style>","\nexport function keyEnter(fn) {\n    return function (e) {\n        return e.key === 'Enter' || e.key === ' ' && !e.preventDefault()  // prevent page scroll down\n            ? fn.call(this, e)\n            : undefined;\n    };\n}\n","\nexport function setContent(node, content) {\n    let actions = {\n        update(content) {\n            if (typeof content == 'string') {\n                node.innerText = content;\n            } else if (content?.domNodes) {\n                node.replaceChildren(...content.domNodes);\n            } else if (content?.html) {\n                node.innerHTML = content.html;\n            }\n        }\n    };\n    actions.update(content);\n\n    return actions;\n}\n\n/** Dispatch event occurred outside of node */\nexport function outsideEvent(node, type) {\n\n    const handlePointerDown = jsEvent => {\n        if (node && !node.contains(jsEvent.target)) {\n            node.dispatchEvent(\n                new CustomEvent(type + 'outside', {detail: {jsEvent}})\n            );\n        }\n    };\n\n    document.addEventListener(type, handlePointerDown, true);\n\n    return {\n        destroy() {\n            document.removeEventListener(type, handlePointerDown, true);\n        }\n    };\n}\n","export const DAY_IN_SECONDS = 86400;\n\nexport function createDate(input = undefined) {\n    if (input !== undefined) {\n        return input instanceof Date ? _fromLocalDate(input) : _fromISOString(input);\n    }\n\n    return _fromLocalDate(new Date());\n}\n\nexport function createDuration(input) {\n    if (typeof input === 'number') {\n        input = {seconds: input};\n    } else if (typeof input === 'string') {\n        // Expected format hh[:mm[:ss]]\n        let seconds = 0, exp = 2;\n        for (let part of input.split(':', 3)) {\n            seconds += parseInt(part, 10) * Math.pow(60, exp--);\n        }\n        input = {seconds};\n    } else if (input instanceof Date) {\n        input = {hours: input.getUTCHours(), minutes: input.getUTCMinutes(), seconds: input.getUTCSeconds()};\n    }\n\n    let weeks = input.weeks || input.week || 0;\n\n    return {\n        years: input.years || input.year || 0,\n        months: input.months || input.month || 0,\n        days: weeks * 7 + (input.days || input.day || 0),\n        seconds: (input.hours || input.hour || 0) * 60 * 60 +\n            (input.minutes || input.minute || 0) * 60 +\n            (input.seconds || input.second || 0),\n        inWeeks: !!weeks\n    };\n}\n\nexport function cloneDate(date) {\n    return new Date(date.getTime());\n}\n\nexport function addDuration(date, duration, x = 1) {\n    date.setUTCFullYear(date.getUTCFullYear() + x * duration.years);\n    let month = date.getUTCMonth() + x * duration.months;\n    date.setUTCMonth(month);\n    month %= 12;\n    if (month < 0) {\n        month += 12;\n    }\n    while (date.getUTCMonth() !== month) {\n        subtractDay(date);\n    }\n    date.setUTCDate(date.getUTCDate() + x * duration.days);\n    date.setUTCSeconds(date.getUTCSeconds() + x * duration.seconds);\n\n    return date;\n}\n\nexport function subtractDuration(date, duration, x = 1) {\n    return addDuration(date, duration, -x);\n}\n\nexport function addDay(date, x = 1) {\n    date.setUTCDate(date.getUTCDate() + x);\n\n    return date;\n}\n\nexport function subtractDay(date, x = 1) {\n    return addDay(date, -x);\n}\n\nexport function setMidnight(date) {\n    date.setUTCHours(0, 0, 0, 0);\n\n    return date;\n}\n\nexport function toLocalDate(date) {\n    return new Date(\n        date.getUTCFullYear(),\n        date.getUTCMonth(),\n        date.getUTCDate(),\n        date.getUTCHours(),\n        date.getUTCMinutes(),\n        date.getUTCSeconds()\n    );\n}\n\nexport function toISOString(date, len = 19) {\n    return date.toISOString().substring(0, len);\n}\n\nexport function datesEqual(date1, ...dates2) {\n    return dates2.every(date2 => date1.getTime() === date2.getTime());\n}\n\nexport function nextClosestDay(date, day) {\n    let diff = day - date.getUTCDay();\n    date.setUTCDate(date.getUTCDate() + (diff >= 0 ? diff : diff + 7));\n    return date;\n}\n\nexport function prevClosestDay(date, day) {\n    let diff = day - date.getUTCDay();\n    date.setUTCDate(date.getUTCDate() + (diff <= 0 ? diff : diff - 7));\n    return date;\n}\n\n/**\n * Check whether given date is string which contains no time part\n  */\nexport function noTimePart(date) {\n    return typeof date === 'string' && date.length <= 10;\n}\n\n/**\n * Copy time from one date to another\n */\nexport function copyTime(toDate, fromDate) {\n    toDate.setUTCHours(fromDate.getUTCHours(), fromDate.getUTCMinutes(), fromDate.getUTCSeconds(), 0);\n\n    return toDate;\n}\n\n/**\n * Get duration value in seconds\n */\nexport function toSeconds(duration) {\n    return duration.seconds;\n}\n\n/**\n * Move the date forward (when pressing the next button)\n */\nexport function nextDate(date, duration) {\n    addDuration(date, duration);\n    return date;\n}\n\n/**\n * Move the date backward (when pressing the prev button)\n */\nexport function prevDate(date, duration, hiddenDays) {\n    subtractDuration(date, duration);\n    if (hiddenDays.length && hiddenDays.length < 7) {\n        while (hiddenDays.includes(date.getUTCDay())) {\n            subtractDay(date);\n        }\n    }\n    return date;\n}\n\n/**\n * Private functions\n */\n\nfunction _fromLocalDate(date) {\n    return new Date(Date.UTC(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds()\n    ));\n}\n\nfunction _fromISOString(str) {\n    const parts = str.match(/\\d+/g);\n    return new Date(Date.UTC(\n        Number(parts[0]),\n        Number(parts[1]) - 1,\n        Number(parts[2]),\n        Number(parts[3] || 0),\n        Number(parts[4] || 0),\n        Number(parts[5] || 0)\n    ));\n}\n","export function assign(...args) {\n    return Object.assign(...args);\n}\n\nexport function keys(object) {\n    return Object.keys(object);\n}\n\nexport function floor(value) {\n    return Math.floor(value);\n}\n\nexport function ceil(value) {\n    return Math.ceil(value);\n}\n\nexport function min(...args) {\n    return Math.min(...args);\n}\n\nexport function max(...args) {\n    return Math.max(...args);\n}\n\nexport function symbol() {\n    return Symbol('ec');\n}\n\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n\nexport function isFunction(value) {\n    return typeof value === 'function';\n}\n\nexport function run(fn) {\n    return fn();\n}\n\nexport function runAll(fns) {\n    fns.forEach(run);\n}\n\nexport function noop() {}\n\nexport const identity = (x) => x;\n","import {runAll} from './utils.js';\n\nexport function debounce(fn, handle, queueStore) {\n    queueStore.update(queue => queue.set(handle, fn));\n}\n\nexport function flushDebounce(queue) {\n    runAll(queue);\n    queue.clear();\n}\n\nexport function task(fn, handle, tasks) {\n    handle ??= fn;\n    if (!tasks.has(handle)) {\n        tasks.set(handle, setTimeout(() => {\n            tasks.delete(handle);\n            fn();\n        }));\n    }\n}\n","import {symbol} from './utils.js';\n\nexport function createElement(tag, className, content, attrs = []) {\n    let el = document.createElement(tag);\n    el.className = className;\n    if (typeof content == 'string') {\n        el.innerText = content;\n    } else if (content.domNodes) {\n        el.replaceChildren(...content.domNodes);\n    } else if (content.html) {\n        el.innerHTML = content.html;\n    }\n    for (let attr of attrs) {\n        el.setAttribute(...attr);\n    }\n    return el;\n}\n\nexport function hasYScroll(el) {\n    return el.scrollHeight > el.clientHeight;\n}\n\nexport function rect(el) {\n    return el.getBoundingClientRect();\n}\n\nexport function ancestor(el, up) {\n    while (up--) {\n        el = el.parentElement;\n    }\n    return el;\n}\n\nexport function height(el) {\n    return rect(el).height;\n}\n\nlet payloadProp = symbol();\nexport function setPayload(el, payload) {\n    el[payloadProp] = payload;\n}\n\nexport function hasPayload(el) {\n    return !!el?.[payloadProp];\n}\n\nexport function getPayload(el) {\n    return el[payloadProp];\n}\n\nexport function getElementWithPayload(x, y, root = document) {\n    for (let el of root.elementsFromPoint(x, y)) {\n        if (hasPayload(el)) {\n            return el;\n        }\n        /** @see https://github.com/vkurko/calendar/issues/142 */\n        if (el.shadowRoot) {\n            let shadowEl = getElementWithPayload(x, y, el.shadowRoot);\n            if (shadowEl) {\n                return shadowEl;\n            }\n        }\n    }\n    return null;\n}\n\nexport function listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\n","import {assign} from './utils';\nimport {toLocalDate} from './date';\n\nexport function createView(view, _viewTitle, _currentRange, _activeRange) {\n    return {\n        type: view,\n        title: _viewTitle,\n        currentStart: _currentRange.start,\n        currentEnd: _currentRange.end,\n        activeStart: _activeRange.start,\n        activeEnd: _activeRange.end,\n        calendar: undefined\n    };\n}\n\nexport function toViewWithLocalDates(view) {\n    view = assign({}, view);\n    view.currentStart = toLocalDate(view.currentStart);\n    view.currentEnd = toLocalDate(view.currentEnd);\n    view.activeStart = toLocalDate(view.activeStart);\n    view.activeEnd = toLocalDate(view.activeEnd);\n\n    return view;\n}\n\nexport function listView(view) {\n    return view.startsWith('list');\n}\n\nexport function timelineView(view) {\n    return view.includes('Timeline');\n}\n","import {addDay, datesEqual, createDate, cloneDate, setMidnight, toLocalDate, toISOString, noTimePart, copyTime} from './date';\nimport {createElement} from './dom';\nimport {assign, isArray, isFunction} from './utils';\nimport {toViewWithLocalDates} from './view';\n\nlet eventId = 1;\nexport function createEvents(input) {\n    return input.map(event => {\n        let result = {\n            id: 'id' in event ? String(event.id) : `{generated-${eventId++}}`,\n            resourceIds: toArrayProp(event, 'resourceId').map(String),\n            allDay: event.allDay ?? (noTimePart(event.start) && noTimePart(event.end)),\n            start: createDate(event.start),\n            end: createDate(event.end),\n            title: event.title ?? '',\n            editable: event.editable,\n            startEditable: event.startEditable,\n            durationEditable: event.durationEditable,\n            display: event.display ?? 'auto',\n            extendedProps: event.extendedProps ?? {},\n            backgroundColor: event.backgroundColor ?? event.color,\n            textColor: event.textColor,\n            classNames: toArrayProp(event, 'className'),\n            styles: toArrayProp(event, 'style')\n        };\n\n        if (result.allDay) {\n            // Make sure all-day events start and end at midnight\n            setMidnight(result.start);\n            let end = cloneDate(result.end);\n            setMidnight(result.end);\n            if (\n                !datesEqual(result.end, end) ||\n                datesEqual(result.end, result.start)  /** @see https://github.com/vkurko/calendar/issues/50 */\n            ) {\n                addDay(result.end);\n            }\n        }\n\n        return result;\n    });\n}\n\nfunction toArrayProp(input, propName) {\n    let result = input[propName + 's'] ?? input[propName] ?? [];\n    return isArray(result) ? result : [result];\n}\n\nexport function createEventSources(input) {\n    return input.map(source => ({\n        events: source.events,\n        url: (source.url && source.url.trimEnd('&')) || '',\n        method: (source.method && source.method.toUpperCase()) || 'GET',\n        extraParams: source.extraParams || {}\n    }));\n}\n\nexport function createEventChunk(event, start, end) {\n    return {\n        start: event.start > start ? event.start : start,\n        end: event.end < end ? event.end : end,\n        event\n    };\n}\n\nexport function sortEventChunks(chunks) {\n    // Sort by start date (all-day events always on top)\n    chunks.sort((a, b) => a.start - b.start || b.event.allDay - a.event.allDay);\n}\n\nexport function createEventContent(chunk, displayEventEnd, eventContent, theme, _intlEventTime, _view) {\n    let timeText = _intlEventTime.formatRange(\n        chunk.start,\n        displayEventEnd && chunk.event.display !== 'pointer'\n            ? copyTime(cloneDate(chunk.start), chunk.end)  // make Intl.formatRange output only the time part\n            : chunk.start\n    );\n    let content;\n\n    if (eventContent) {\n        content = isFunction(eventContent)\n            ? eventContent({\n                event: toEventWithLocalDates(chunk.event),\n                timeText,\n                view: toViewWithLocalDates(_view)\n            })\n            : eventContent;\n    }\n\n    if (content === undefined) {\n        let domNodes;\n        switch (chunk.event.display) {\n            case 'background':\n                domNodes = [];\n                break;\n            case 'pointer':\n                domNodes = [createTimeElement(timeText, chunk, theme)];\n                break;\n            default:\n                domNodes = [\n                    ...chunk.event.allDay ? [] : [createTimeElement(timeText, chunk, theme)],\n                    createElement('h4', theme.eventTitle, chunk.event.title)\n                ];\n        }\n        content = {domNodes};\n    }\n\n    return [timeText, content];\n}\n\nfunction createTimeElement(timeText, chunk, theme) {\n    return createElement(\n        'time',\n        theme.eventTime,\n        timeText,\n        [['datetime', toISOString(chunk.start)]]\n    );\n}\n\nexport function createEventClasses(eventClassNames, event, _view) {\n    let result = event.classNames;\n    if (eventClassNames) {\n        if (isFunction(eventClassNames)) {\n            eventClassNames = eventClassNames({\n                event: toEventWithLocalDates(event),\n                view: toViewWithLocalDates(_view)\n            });\n        }\n        result = [\n            ...isArray(eventClassNames) ? eventClassNames : [eventClassNames],\n            ...result\n        ];\n    }\n    return result;\n}\n\nexport function toEventWithLocalDates(event) {\n    return _cloneEvent(event, toLocalDate);\n}\n\nexport function cloneEvent(event) {\n    return _cloneEvent(event, cloneDate);\n}\n\nfunction _cloneEvent(event, dateFn) {\n    event = assign({}, event);\n    event.start = dateFn(event.start);\n    event.end = dateFn(event.end);\n\n    return event;\n}\n\n/**\n * Prepare event chunks for month view and all-day slot in week view\n */\nexport function prepareEventChunks(chunks, hiddenDays) {\n    let longChunks = {};\n\n    if (chunks.length) {\n        sortEventChunks(chunks);\n\n        let prevChunk;\n        for (let chunk of chunks) {\n            let dates = [];\n            let date = setMidnight(cloneDate(chunk.start));\n            while (chunk.end > date) {\n                if (!hiddenDays.includes(date.getUTCDay())) {\n                    dates.push(cloneDate(date));\n                    if (dates.length > 1) {\n                        let key = date.getTime();\n                        if (longChunks[key]) {\n                            longChunks[key].chunks.push(chunk);\n                        } else {\n                            longChunks[key] = {\n                                sorted: false,\n                                chunks: [chunk]\n                            };\n                        }\n                    }\n                }\n                addDay(date);\n            }\n            if (dates.length) {\n                chunk.date = dates[0];\n                chunk.days = dates.length;\n                chunk.dates = dates;\n                // Adjust the start and end dates of the chunk if hidden days affected them\n                if (chunk.start < dates[0]) {\n                    chunk.start = dates[0];\n                }\n                let maxEnd = addDay(cloneDate(dates.at(-1)));\n                if (chunk.end > maxEnd) {\n                    chunk.end = maxEnd;\n                }\n            } else {\n                chunk.date = setMidnight(cloneDate(chunk.start));\n                chunk.days = 1;\n                chunk.dates = [chunk.date];\n            }\n\n            if (prevChunk && datesEqual(prevChunk.date, chunk.date)) {\n                chunk.prev = prevChunk;\n            }\n            prevChunk = chunk;\n        }\n    }\n\n    return longChunks;\n}\n\nexport function repositionEvent(chunk, longChunks, height) {\n    chunk.top = 0;\n    if (chunk.prev) {\n        chunk.top = chunk.prev.bottom + 1;\n    }\n    chunk.bottom = chunk.top + height;\n    let margin = 1;\n    let key = chunk.date.getTime();\n    if (longChunks[key]) {\n        if (!longChunks[key].sorted) {\n            longChunks[key].chunks.sort((a, b) => a.top - b.top);\n            longChunks[key].sorted = true;\n        }\n        for (let longChunk of longChunks[key].chunks) {\n            if (chunk.top < longChunk.bottom && chunk.bottom > longChunk.top) {\n                let offset = longChunk.bottom - chunk.top + 1;\n                margin += offset;\n                chunk.top += offset;\n                chunk.bottom += offset;\n            }\n        }\n    }\n\n    return margin;\n}\n\nexport function runReposition(refs, data) {\n    refs.length = data.length;\n    let result = [];\n    for (let ref of refs) {\n        result.push(ref?.reposition?.());\n    }\n    return result;\n}\n\n/**\n * Check whether the event intersects with the given date range and resources\n * @param event\n * @param start\n * @param end\n * @param resources\n * @return boolean\n */\nexport function eventIntersects(event, start, end, resources) {\n    if (event.start < end && event.end > start) {\n        if (resources) {\n            if (!isArray(resources)) {\n                resources = [resources];\n            }\n            return resources.some(resource => event.resourceIds.includes(resource.id));\n        }\n        return true;\n    }\n    return false;\n}\n\nexport function helperEvent(display) {\n    return previewEvent(display) || ghostEvent(display) || pointerEvent(display);\n}\n\nexport function bgEvent(display) {\n    return display === 'background';\n}\n\nexport function previewEvent(display) {\n    return display === 'preview';\n}\n\nexport function ghostEvent(display) {\n    return display === 'ghost';\n}\n\nexport function pointerEvent(display) {\n    return display === 'pointer';\n}\n","\nexport function btnTextDay(text) {\n    return btnText(text, 'day');\n}\n\nexport function btnTextWeek(text) {\n    return btnText(text, 'week');\n}\n\nexport function btnTextMonth(text) {\n    return btnText(text, 'month');\n}\n\nexport function btnTextYear(text) {\n    return btnText(text, 'year');\n}\n\nfunction btnText(text, period) {\n    return {\n        ...text,\n        next: 'Next ' + period,\n        prev: 'Previous ' + period\n    };\n}\n\nexport function themeView(view) {\n    return theme => ({...theme, view});\n}\n","export function createResources(input) {\n    return input.map(resource => ({\n        id: String(resource.id),\n        title: resource.title || '',\n        eventBackgroundColor: resource.eventBackgroundColor,\n        eventTextColor: resource.eventTextColor,\n        extendedProps: resource.extendedProps ?? {}\n    }));\n}\n\nexport function resourceBackgroundColor(event, resources) {\n    return findResource(event, resources)?.eventBackgroundColor;\n}\n\nexport function resourceTextColor(event, resources) {\n    return findResource(event, resources)?.eventTextColor;\n}\n\nfunction findResource(event, resources) {\n    return resources.find(resource => event.resourceIds.includes(resource.id));\n}\n","import {derived} from 'svelte/store';\nimport {isFunction} from './utils.js';\nimport {toLocalDate} from './date';\nimport {createResources} from './resources.js';\n\nexport function intl(locale, format) {\n    return derived([locale, format], ([$locale, $format]) => {\n        let intl = isFunction($format)\n            ? {format: $format}\n            : new Intl.DateTimeFormat($locale, $format);\n        return {\n            format: date => intl.format(toLocalDate(date))\n        };\n    });\n}\n\nexport function intlRange(locale, format) {\n    return derived([locale, format], ([$locale, $format]) => {\n        let formatRange;\n        if (isFunction($format)) {\n            formatRange = $format;\n        } else {\n            let intl = new Intl.DateTimeFormat($locale, $format);\n            formatRange = (start, end) => {\n                if (start <= end) {\n                    return intl.formatRange(start, end);\n                } else {\n                    // In iOS 16 and older, intl.formatRange() throws an exception if the start date is later than the end date.\n                    // Therefore, we first swap the parameters, and then swap the resulting parts.\n                    /** @see https://github.com/vkurko/calendar/issues/227 */\n                    let parts = intl.formatRangeToParts(end, start);\n                    let result = '';\n                    let sources = ['startRange', 'endRange'];\n                    let processed = [false, false];\n                    for (let part of parts) {\n                        let i = sources.indexOf(part.source);\n                        if (i >= 0) {\n                            if (!processed[i]) {\n                                result += _getParts(sources[1 - i], parts);\n                                processed[i] = true;\n                            }\n                        } else {\n                            result += part.value;\n                        }\n                    }\n                    return result;\n                }\n            };\n        }\n        return {\n            formatRange: (start, end) => formatRange(toLocalDate(start), toLocalDate(end))\n        };\n    });\n}\n\nfunction _getParts(source, parts) {\n    let result = '';\n    for (let part of parts) {\n        if (part.source == source) {\n            result += part.value;\n        }\n    }\n    return result;\n}\n\nexport function viewResources(state) {\n    return derived(\n        [state.resources, state.filterResourcesWithEvents, state._events, state._activeRange],\n        ([$resources, $filterResourcesWithEvents, $_events, $_activeRange]) => {\n            let result = $resources;\n\n            if ($filterResourcesWithEvents) {\n                result = $resources.filter(resource => {\n                    for (let event of $_events) {\n                        if (\n                            event.display !== 'background' &&\n                            event.resourceIds.includes(resource.id) &&\n                            event.start < $_activeRange.end &&\n                            event.end > $_activeRange.start\n                        ) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n            }\n\n            if (!result.length) {\n                result = createResources([{}]);\n            }\n\n            return result;\n        }\n    );\n}\n","import {get, writable} from 'svelte/store';\nimport {tick} from 'svelte';\nimport {createOptions, createParsers} from './options';\nimport {\n    activeRange,\n    currentRange,\n    dayGrid,\n    events,\n    now,\n    today,\n    viewDates,\n    viewTitle,\n    view as view2  // hack to avoid a runtime error in SvelteKit dev mode (ReferenceError: view is not defined)\n} from './stores';\nimport {keys, intl, intlRange, isFunction, identity} from '../lib.js';\n\nexport default class {\n    constructor(plugins, input) {\n        plugins = plugins || [];\n\n        // Create options\n        let options = createOptions(plugins);\n        let parsers = createParsers(plugins);\n\n        // Parse options\n        options = parseOpts(options, parsers);\n        input = parseOpts(input, parsers);\n\n        // Create stores for options\n        for (let [option, value] of Object.entries(options)) {\n            this[option] = writable(value);\n        }\n\n        // Private stores\n        this._queue = writable(new Map());  // debounce queue (beforeUpdate)\n        this._queue2 = writable(new Map());  // debounce queue (afterUpdate)\n        this._tasks = new Map();  // timeout IDs for tasks\n        this._auxiliary = writable([]);  // auxiliary components\n        this._dayGrid = dayGrid(this);\n        this._currentRange = currentRange(this);\n        this._activeRange = activeRange(this);\n        this._fetchedRange = writable({start: undefined, end: undefined});\n        this._events = events(this);\n        this._now = now();\n        this._today = today(this);\n        this._intlEventTime = intlRange(this.locale, this.eventTimeFormat);\n        this._intlSlotLabel = intl(this.locale, this.slotLabelFormat);\n        this._intlDayHeader = intl(this.locale, this.dayHeaderFormat);\n        this._intlDayHeaderAL = intl(this.locale, this.dayHeaderAriaLabelFormat);\n        this._intlTitle = intlRange(this.locale, this.titleFormat);\n        this._bodyEl = writable(undefined);\n        this._scrollable = writable(false);\n        this._viewTitle = viewTitle(this);\n        this._viewDates = viewDates(this);\n        this._view = view2(this);\n        this._viewComponent = writable(undefined);\n        // Interaction\n        this._interaction = writable({});\n        this._iEvents = writable([null, null]);  // interaction events: [drag/resize, pointer]\n        this._iClasses = writable(identity);  // interaction event css classes\n        this._iClass = writable(undefined);  // interaction css class for entire calendar\n\n        // Set & Get\n        this._set = (key, value) => {\n            if (validKey(key, this)) {\n                if (parsers[key]) {\n                    value = parsers[key](value);\n                }\n                this[key].set(value);\n            }\n        };\n        this._get = key => validKey(key, this) ? get(this[key]) : undefined;\n\n        // Let plugins create their private stores\n        for (let plugin of plugins) {\n            plugin.createStores?.(this);\n        }\n\n        if (input.view) {\n            // Set initial view based on input\n            this.view.set(input.view);\n        }\n\n        // Set options for each view\n        let views = new Set([...keys(options.views), ...keys(input.views ?? {})]);\n        for (let view of views) {\n            let defOpts = mergeOpts(options, options.views[view] ?? {});\n            let opts = mergeOpts(defOpts, input, input.views?.[view] ?? {});\n            let component = opts.component;\n            // Make sure we deal with valid opts from now on\n            filterOpts(opts, this);\n            // Process options\n            for (let key of keys(opts)) {\n                let {set, _set = set, ...rest} = this[key];\n\n                this[key] = {\n                    // Set value in all views\n                    set: ['buttonText', 'theme'].includes(key)\n                        ? value => {\n                            if (isFunction(value)) {\n                                let result = value(defOpts[key]);\n                                opts[key] = result;\n                                set(set === _set ? result : value);\n                            } else {\n                                opts[key] = value;\n                                set(value);\n                            }\n                        }\n                        : value => {\n                            opts[key] = value;\n                            set(value);\n                        },\n                    _set,\n                    ...rest\n                };\n            }\n            // When view changes...\n            this.view.subscribe(newView => {\n                if (newView === view) {\n                    // switch view component\n                    this._viewComponent.set(component);\n                    if (isFunction(opts.viewDidMount)) {\n                        tick().then(() => opts.viewDidMount(get(this._view)));\n                    }\n                    // update store values\n                    for (let key of keys(opts)) {\n                        this[key]._set(opts[key]);\n                    }\n                }\n            });\n        }\n    }\n}\n\nfunction parseOpts(opts, parsers) {\n    let result = {...opts};\n    for (let key of keys(parsers)) {\n        if (key in result) {\n            result[key] = parsers[key](result[key]);\n        }\n    }\n    if (opts.views) {\n        result.views = {};\n        for (let view of keys(opts.views)) {\n            result.views[view] = parseOpts(opts.views[view], parsers);\n        }\n    }\n    return result;\n}\n\nfunction mergeOpts(...args) {\n    let result = {};\n    for (let opts of args) {\n        let override = {};\n        for (let key of ['buttonText', 'theme']) {\n            if (isFunction(opts[key])) {\n                override[key] = opts[key](result[key]);\n            }\n        }\n        result = {\n            ...result,\n            ...opts,\n            ...override\n        };\n    }\n    return result;\n}\n\nfunction filterOpts(opts, state) {\n    keys(opts)\n        .filter(key => !validKey(key, state) || key == 'view')\n        .forEach(key => delete opts[key]);\n}\n\nfunction validKey(key, state) {\n    return state.hasOwnProperty(key) && key[0] !== '_';\n}\n","import {\n    assign,\n    createDate,\n    createDuration,\n    keys,\n    setMidnight,\n    createEvents,\n    createEventSources,\n    createResources\n} from '../lib.js';\n\nexport function createOptions(plugins) {\n    let options = {\n        allDayContent: undefined,\n        allDaySlot: true,\n        buttonText: {\n            today: 'today',\n        },\n        customButtons: {},\n        date: new Date(),\n        datesSet: undefined,\n        dayHeaderFormat: {\n            weekday: 'short',\n            month: 'numeric',\n            day: 'numeric'\n        },\n        dayHeaderAriaLabelFormat: {\n            dateStyle: 'full'\n        },\n        displayEventEnd: true,\n        duration: {weeks: 1},\n        events: [],\n        eventAllUpdated: undefined,\n        eventBackgroundColor: undefined,\n        eventTextColor: undefined,\n        eventClassNames: undefined,\n        eventClick: undefined,\n        eventColor: undefined,\n        eventContent: undefined,\n        eventDidMount: undefined,\n        eventMouseEnter: undefined,\n        eventMouseLeave: undefined,\n        eventSources: [],\n        eventTimeFormat: {\n            hour: 'numeric',\n            minute: '2-digit'\n        },\n        filterEventsWithResources: false,\n        filterResourcesWithEvents: false,\n        firstDay: 0,\n        flexibleSlotTimeLimits: false,  // ec option\n        headerToolbar: {\n            start: 'title',\n            center: '',\n            end: 'today prev,next'\n        },\n        height: undefined,\n        hiddenDays: [],\n        highlightedDates: [],  // ec option\n        lazyFetching: true,\n        loading: undefined,\n        locale: undefined,\n        nowIndicator: false,\n        resourceLabelContent: undefined,\n        resourceLabelDidMount: undefined,\n        resources: [],\n        selectable: false,\n        scrollTime: '06:00:00',\n        slotDuration: '00:30:00',\n        slotEventOverlap: true,\n        slotHeight: 24,  // ec option\n        slotLabelFormat: {\n            hour: 'numeric',\n            minute: '2-digit'\n        },\n        slotMaxTime: '24:00:00',\n        slotMinTime: '00:00:00',\n        slotWidth: 72,\n        theme: {\n            allDay: 'ec-all-day',\n            active: 'ec-active',\n            bgEvent: 'ec-bg-event',\n            bgEvents: 'ec-bg-events',\n            body: 'ec-body',\n            button: 'ec-button',\n            buttonGroup: 'ec-button-group',\n            calendar: 'ec',\n            compact: 'ec-compact',\n            content: 'ec-content',\n            day: 'ec-day',\n            dayHead: 'ec-day-head',\n            days: 'ec-days',\n            event: 'ec-event',\n            eventBody: 'ec-event-body',\n            eventTime: 'ec-event-time',\n            eventTitle: 'ec-event-title',\n            events: 'ec-events',\n            extra: 'ec-extra',\n            handle: 'ec-handle',\n            header: 'ec-header',\n            hiddenScroll: 'ec-hidden-scroll',\n            highlight: 'ec-highlight',\n            icon: 'ec-icon',\n            line: 'ec-line',\n            lines: 'ec-lines',\n            nowIndicator: 'ec-now-indicator',\n            otherMonth: 'ec-other-month',\n            resource: 'ec-resource',\n            sidebar: 'ec-sidebar',\n            sidebarTitle: 'ec-sidebar-title',\n            today: 'ec-today',\n            time: 'ec-time',\n            title: 'ec-title',\n            toolbar: 'ec-toolbar',\n            view: '',\n            weekdays: ['ec-sun', 'ec-mon', 'ec-tue', 'ec-wed', 'ec-thu', 'ec-fri', 'ec-sat'],\n            withScroll: 'ec-with-scroll'\n        },\n        titleFormat: {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric'\n        },\n        view: undefined,\n        viewDidMount: undefined,\n        views: {}\n    };\n\n    for (let plugin of plugins) {\n        plugin.createOptions?.(options);\n    }\n\n    return options;\n}\n\nexport function createParsers(plugins) {\n    let parsers = {\n        date: date => setMidnight(createDate(date)),\n        duration: createDuration,\n        events: createEvents,\n        eventSources: createEventSources,\n        hiddenDays: days => [...new Set(days)],\n        highlightedDates: dates => dates.map(date => setMidnight(createDate(date))),\n        resources: createResources,\n        scrollTime: createDuration,\n        slotDuration: createDuration,\n        slotMaxTime: createDuration,\n        slotMinTime: createDuration\n    };\n\n    for (let plugin of plugins) {\n        plugin.createParsers?.(parsers);\n    }\n\n    return parsers;\n}\n\nexport function diff(options, prevOptions) {\n    let diff = [];\n    for (let key of keys(options)) {\n        if (options[key] !== prevOptions[key]) {\n            diff.push([key, options[key]]);\n        }\n    }\n    assign(prevOptions, options);\n\n    return diff;\n}\n","import {derived, writable, readable, get} from 'svelte/store';\nimport {isFunction} from '../lib/utils.js';\nimport {\n    DAY_IN_SECONDS,\n    assign,\n    cloneDate,\n    createDate,\n    createEvents,\n    createView,\n    addDuration,\n    addDay,\n    subtractDay,\n    toISOString,\n    nextClosestDay,\n    prevClosestDay,\n    setMidnight,\n    toLocalDate,\n    debounce\n} from '../lib.js';\n\nexport function dayGrid(state) {\n    return derived(state.view, $view => $view?.startsWith('dayGrid'));\n}\n\nexport function activeRange(state) {\n    return derived(\n        [state._currentRange, state.firstDay, state.slotMaxTime, state._dayGrid],\n        ([$_currentRange, $firstDay, $slotMaxTime, $_dayGrid]) => {\n            let start = cloneDate($_currentRange.start);\n            let end = cloneDate($_currentRange.end);\n\n            if ($_dayGrid) {\n                // First day of week\n                prevClosestDay(start, $firstDay);\n                nextClosestDay(end, $firstDay);\n            } else if ($slotMaxTime.days || $slotMaxTime.seconds > DAY_IN_SECONDS) {\n                addDuration(subtractDay(end), $slotMaxTime);\n                let start2 = subtractDay(cloneDate(end));\n                if (start2 < start) {\n                    start = start2;\n                }\n            }\n\n            return {start, end};\n        }\n    );\n}\n\nexport function currentRange(state) {\n    return derived(\n        [state.date, state.duration, state.firstDay],\n        ([$date, $duration, $firstDay]) => {\n            let start = cloneDate($date), end;\n            if ($duration.months) {\n                start.setUTCDate(1);\n            } else if ($duration.inWeeks) {\n                // First day of week\n                prevClosestDay(start, $firstDay);\n            }\n            end = addDuration(cloneDate(start), $duration);\n\n            return {start, end};\n        }\n    );\n}\n\nexport function viewDates(state) {\n    return derived([state._activeRange, state.hiddenDays], ([$_activeRange, $hiddenDays]) => {\n        let dates = [];\n        let date = setMidnight(cloneDate($_activeRange.start));\n        let end = setMidnight(cloneDate($_activeRange.end));\n        while (date < end) {\n            if (!$hiddenDays.includes(date.getUTCDay())) {\n                dates.push(cloneDate(date));\n            }\n            addDay(date);\n        }\n        if (!dates.length && $hiddenDays.length && $hiddenDays.length < 7) {\n            // Try to move the date\n            state.date.update(date => {\n                while ($hiddenDays.includes(date.getUTCDay())) {\n                    addDay(date);\n                }\n                return date;\n            });\n            dates = get(state._viewDates);\n        }\n\n        return dates;\n    });\n}\n\nexport function viewTitle(state) {\n    return derived(\n        [state.date, state._activeRange, state._intlTitle, state._dayGrid],\n        ([$date, $_activeRange, $_intlTitle, $_dayGrid]) => {\n            return $_dayGrid\n                ? $_intlTitle.formatRange($date, $date)\n                : $_intlTitle.formatRange($_activeRange.start, subtractDay(cloneDate($_activeRange.end)));\n        }\n    );\n}\n\nexport function view(state) {\n    return derived([state.view, state._viewTitle, state._currentRange, state._activeRange], args => createView(...args));\n}\n\nexport function events(state) {\n    let _events = writable([]);\n    let abortController;\n    let fetching = 0;\n    let debounceHandle = {};\n    derived(\n        [state.events, state.eventSources, state._activeRange, state._fetchedRange, state.lazyFetching, state.loading],\n        (values, set) => debounce(() => {\n            let [$events, $eventSources, $_activeRange, $_fetchedRange, $lazyFetching, $loading] = values;\n            if (!$eventSources.length) {\n                set($events);\n                return;\n            }\n            // Do not fetch if new range is within the previous one\n            if (!$_fetchedRange.start || $_fetchedRange.start > $_activeRange.start || $_fetchedRange.end < $_activeRange.end || !$lazyFetching) {\n                if (abortController) {\n                    // Abort previous request\n                    abortController.abort();\n                }\n                // Create new abort controller\n                abortController = new AbortController();\n                // Call loading hook\n                if (isFunction($loading) && !fetching) {\n                    $loading(true);\n                }\n                let stopLoading = () => {\n                    if (--fetching === 0 && isFunction($loading)) {\n                        $loading(false);\n                    }\n                };\n                let events = [];\n                // Prepare handlers\n                let failure = e => stopLoading();\n                let success = data => {\n                    events = events.concat(createEvents(data));\n                    set(events);\n                    stopLoading();\n                };\n                // Prepare other stuff\n                let startStr = toISOString($_activeRange.start)\n                let endStr = toISOString($_activeRange.end);\n                // Loop over event sources\n                for (let source of $eventSources) {\n                    if (isFunction(source.events)) {\n                        // Events as a function\n                        let result = source.events({\n                            start: toLocalDate($_activeRange.start),\n                            end: toLocalDate($_activeRange.end),\n                            startStr,\n                            endStr\n                        }, success, failure);\n                        if (result !== undefined) {\n                            Promise.resolve(result).then(success, failure);\n                        }\n                    } else {\n                        // Events as a JSON feed\n                        // Prepare params\n                        let params = isFunction(source.extraParams) ? source.extraParams() : assign({}, source.extraParams);\n                        params.start = startStr;\n                        params.end = endStr;\n                        params = new URLSearchParams(params);\n                        // Prepare fetch\n                        let url = source.url, headers = {}, body;\n                        if (['GET', 'HEAD'].includes(source.method)) {\n                            url += (url.includes('?') ? '&' : '?') + params;\n                        } else {\n                            headers['content-type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n                            body = String(params);  // Safari 10.1 doesn't convert to string automatically\n                        }\n                        // Do the fetch\n                        fetch(url, {method: source.method, headers, body, signal: abortController.signal, credentials: 'same-origin'})\n                            .then(response => response.json())\n                            .then(success)\n                            .catch(failure);\n                    }\n                    ++fetching;\n                }\n                // Save current range for future requests\n                $_fetchedRange.start = $_activeRange.start;\n                $_fetchedRange.end = $_activeRange.end;\n            }\n        }, debounceHandle, state._queue),\n        []\n    ).subscribe(_events.set);\n\n    return _events;\n}\n\nexport function now() {\n    return readable(createDate(), set => {\n        let interval = setInterval(() => {\n            set(createDate());\n        }, 1000);\n\n        return () => clearInterval(interval);\n    });\n}\n\nexport function today(state) {\n    return derived(state._now, $_now => setMidnight(cloneDate($_now)));\n}\n","<script>\n    import {getContext} from 'svelte';\n    import {createDate, cloneDate, setContent, setMidnight, nextDate, prevDate} from './lib.js';\n\n    export let buttons;\n\n    let {_currentRange, _viewTitle, buttonText, customButtons, date, duration, hiddenDays, theme, view} = getContext('state');\n\n    let today = setMidnight(createDate()), isToday;\n\n    $: isToday = today >= $_currentRange.start && today < $_currentRange.end || null;\n\n    function prev() {\n        $date = prevDate($date, $duration, $hiddenDays);\n    }\n\n    function next() {\n        $date = nextDate($date, $duration);\n    }\n</script>\n\n{#each buttons as button}\n    {#if button == 'title'}\n        <!-- svelte-ignore a11y-missing-content -->\n        <h2 class=\"{$theme.title}\" use:setContent={$_viewTitle}></h2>\n    {:else if button == 'prev'}\n        <button\n            class=\"{$theme.button} ec-{button}\"\n            aria-label={$buttonText.prev}\n            title={$buttonText.prev}\n            on:click={prev}\n        ><i class=\"{$theme.icon} ec-{button}\"></i></button>\n    {:else if button == 'next'}\n        <button\n            class=\"{$theme.button} ec-{button}\"\n            aria-label={$buttonText.next}\n            title={$buttonText.next}\n            on:click={next}\n        ><i class=\"{$theme.icon} ec-{button}\"></i></button>\n    {:else if button == 'today'}\n        <button\n            class=\"{$theme.button} ec-{button}\"\n            on:click={() => $date = cloneDate(today)}\n            disabled={isToday}\n        >{$buttonText[button]}</button>\n    {:else if $customButtons[button]}\n        <button\n            class=\"{$theme.button} ec-{button}{$customButtons[button].active ? ' ' + $theme.active : ''}\"\n            on:click={$customButtons[button].click}\n            use:setContent={$customButtons[button].text}\n        ></button>\n    {:else if button != ''}\n        <button\n            class=\"{$theme.button}{$view === button ? ' ' + $theme.active : ''} ec-{button}\"\n            on:click={() => $view = button}\n        >{$buttonText[button]}</button>\n    {/if}\n{/each}\n","<script>\n    import {getContext} from 'svelte';\n    import {keys} from './lib.js';\n    import Buttons from './Buttons.svelte';\n\n    let {headerToolbar, theme} = getContext('state');\n\n    let sections = {\n        start: [],\n        center: [],\n        end: []\n    };\n\n    $: {\n        for (let key of keys(sections)) {\n            sections[key] = $headerToolbar[key].split(' ').map(group => group.split(','));\n        }\n    }\n</script>\n\n<nav class=\"{$theme.toolbar}\">\n    {#each keys(sections) as key}\n        <div class=\"ec-{key}\">\n            {#each sections[key] as buttons}\n                {#if buttons.length > 1}\n                    <div class=\"{$theme.buttonGroup}\">\n                        <Buttons {buttons}/>\n                    </div>\n                {:else}\n                    <Buttons {buttons}/>\n                {/if}\n            {/each}\n        </div>\n    {/each}\n</nav>\n","<script>\n    import {getContext} from 'svelte';\n    import {debounce, toISOString, toLocalDate, toViewWithLocalDates, isFunction} from './lib.js';\n\n    let {datesSet, _auxiliary, _activeRange, _queue, _view} = getContext('state');\n\n    // Set up datesSet callback\n    $: runDatesSet($_activeRange);\n\n    let debounceHandle = {};\n    function runDatesSet(_activeRange) {\n        if (isFunction($datesSet)) {\n            debounce(() => $datesSet({\n                start: toLocalDate(_activeRange.start),\n                end: toLocalDate(_activeRange.end),\n                startStr: toISOString(_activeRange.start),\n                endStr: toISOString(_activeRange.end),\n                view: toViewWithLocalDates($_view)\n            }), debounceHandle, _queue);\n        }\n    }\n</script>\n\n{#each $_auxiliary as component}\n    <svelte:component this={component} />\n{/each}\n","<script>\n    import '../index.css';\n    import {setContext, beforeUpdate, afterUpdate} from 'svelte';\n    import {get} from 'svelte/store';\n    import {diff} from './storage/options';\n    import State from './storage/state';\n    import Toolbar from './Toolbar.svelte';\n    import Auxiliary from './Auxiliary.svelte';\n    import {\n        assign,\n        createEvents,\n        toEventWithLocalDates,\n        toViewWithLocalDates,\n        toLocalDate,\n        getElementWithPayload,\n        getPayload,\n        flushDebounce,\n        hasYScroll,\n        listView,\n        task, prevDate, nextDate\n    } from './lib.js';\n\n    export let plugins = [];\n    export let options = {};\n\n    let state = new State(plugins, options);\n    setContext('state', state);\n\n    let {_viewComponent, _bodyEl, _interaction, _iClass, _events, _queue, _queue2, _tasks, _scrollable,\n        date, duration, hiddenDays, height, theme, view} = state;\n\n    // Reactively update options that did change\n    let prevOptions = {...options};\n    $: for (let [name, value] of diff(options, prevOptions)) {\n        setOption(name, value);\n    }\n\n    export function setOption(name, value) {\n        state._set(name, value);\n        return this;\n    }\n\n    export function getOption(name) {\n        let value = state._get(name);\n        return value instanceof Date ? toLocalDate(value) : value;\n    }\n\n    export function refetchEvents() {\n        state._fetchedRange.set({start: undefined, end: undefined});\n        return this;\n    }\n\n    export function getEvents() {\n        return $_events.map(toEventWithLocalDates);\n    }\n\n    export function getEventById(id) {\n        for (let event of $_events) {\n            if (event.id == id) {\n                return toEventWithLocalDates(event);\n            }\n        }\n        return null;\n    }\n\n    export function addEvent(event) {\n        event = createEvents([event])[0];\n        $_events.push(event);\n        $_events = $_events;\n        return event;\n    }\n\n    export function updateEvent(event) {\n        for (let e of $_events) {\n            if (e.id == event.id) {\n                event = createEvents([event])[0];\n                assign(e, event);\n                $_events = $_events;\n                return event;\n            }\n        }\n        return null;\n    }\n\n    export function removeEventById(id) {\n        let idx = $_events.findIndex(event => event.id == id);\n        if (idx >= 0) {\n            $_events.splice(idx, 1);\n            $_events = $_events;\n        }\n        return this;\n    }\n\n    export function getView() {\n        return toViewWithLocalDates(get(state._view));\n    }\n\n    export function unselect() {\n        $_interaction.action?.unselect();\n        return this;\n    }\n\n    export function dateFromPoint(x, y) {\n        let dayEl = getElementWithPayload(x, y);\n        if (dayEl) {\n            let info = getPayload(dayEl)(x, y);\n            info.date = toLocalDate(info.date);\n\n            return info;\n        }\n        return null;\n    }\n\n    export function next() {\n        $date = nextDate($date, $duration);\n        return this;\n    }\n\n    export function prev() {\n        $date = prevDate($date, $duration, $hiddenDays);\n        return this;\n    }\n\n    beforeUpdate(() => {\n        flushDebounce($_queue);\n    });\n\n    afterUpdate(() => {\n        flushDebounce($_queue2);\n        task(recheckScrollable, null, _tasks);\n    });\n\n    function recheckScrollable() {\n        if ($_bodyEl) {\n            $_scrollable = hasYScroll($_bodyEl);\n        }\n    }\n</script>\n\n<div\n    class=\"{$theme.calendar} {$theme.view}{$_scrollable ? ' ' + $theme.withScroll : ''}{$_iClass ? ' ' + $theme[$_iClass] : ''}\"\n    style:height={$height}\n    role=\"{listView($view) ? 'list' : 'table'}\"\n>\n    <Toolbar/>\n    <svelte:component this={$_viewComponent}/>\n</div>\n<Auxiliary/>\n\n<svelte:window on:resize={recheckScrollable}/>\n","<script>\n    import {getContext} from 'svelte';\n    import {setContent} from '@event-calendar/core';\n\n    let {theme, _intlDayHeader, _intlDayHeaderAL, _days} = getContext('state');\n</script>\n\n<div class=\"{$theme.header}\">\n    <div class=\"{$theme.days}\" role=\"row\">\n        {#each $_days as day}\n            <div class=\"{$theme.day} {$theme.weekdays?.[day.getUTCDay()]}\" role=\"columnheader\">\n                <span\n                    aria-label=\"{$_intlDayHeaderAL.format(day)}\"\n                    use:setContent={$_intlDayHeader.format(day)}\n                ></span>\n            </div>\n        {/each}\n    </div>\n    <div class=\"{$theme.hiddenScroll}\"></div>\n</div>\n","<script>\n    import {afterUpdate, getContext, onMount} from 'svelte';\n    import {\n        ancestor,\n        createEventClasses,\n        createEventContent,\n        height,\n        max,\n        toEventWithLocalDates,\n        toViewWithLocalDates,\n        setContent,\n        repositionEvent,\n        resourceBackgroundColor,\n        resourceTextColor,\n        helperEvent,\n        keyEnter,\n        task,\n        rect,\n        bgEvent,\n        isFunction\n    } from '@event-calendar/core';\n\n    export let chunk;\n    export let longChunks = {};\n    export let inPopup = false;\n    export let dates = [];\n\n    let {dayMaxEvents, displayEventEnd, eventAllUpdated, eventBackgroundColor, eventTextColor, eventClick, eventColor,\n        eventContent, eventClassNames, eventDidMount, eventMouseEnter, eventMouseLeave, resources, theme,\n        _view, _intlEventTime, _interaction, _iClasses, _hiddenEvents, _popupDate, _tasks} = getContext('state');\n\n    let el;\n    let event;\n    let classes;\n    let style;\n    let content;\n    let timeText;\n    let margin = 1;\n    let hidden = false;\n    let display;\n    let onclick;\n\n    $: event = chunk.event;\n\n    $: {\n        display = event.display;\n\n        // Class & Style\n        let bgColor = event.backgroundColor || resourceBackgroundColor(event, $resources) || $eventBackgroundColor || $eventColor;\n        let txtColor = event.textColor || resourceTextColor(event, $resources) || $eventTextColor;\n        if (bgEvent(display)) {\n            style = `width:calc(${chunk.days * 100}% + ${(chunk.days - 1)}px);`;\n        } else {\n            let marginTop = margin;\n            if (event._margin) {\n                // Force margin for helper events\n                let [_margin, _dates] = event._margin;\n                if (chunk.date >= _dates[0] && chunk.date <= _dates.at(-1)) {\n                    marginTop = _margin;\n                }\n            }\n            style =\n                `width:calc(${chunk.days * 100}% + ${(chunk.days - 1) * 7}px);` +\n                `margin-top:${marginTop}px;`;\n        }\n        if (bgColor) {\n            style += `background-color:${bgColor};`;\n        }\n        if (txtColor) {\n            style += `color:${txtColor};`;\n        }\n        if (hidden) {\n            style += 'visibility:hidden;';\n        }\n        style += event.styles.join(';');\n\n        classes = [\n            bgEvent(display) ? $theme.bgEvent : $theme.event,\n            ...$_iClasses([], event),\n            ...createEventClasses($eventClassNames, event, $_view)\n        ].join(' ');\n    }\n\n    // Content\n    $: [timeText, content] = createEventContent(chunk, $displayEventEnd, $eventContent, $theme, $_intlEventTime, $_view);\n\n    onMount(() => {\n        if (isFunction($eventDidMount)) {\n            $eventDidMount({\n                event: toEventWithLocalDates(event),\n                timeText,\n                el,\n                view: toViewWithLocalDates($_view)\n            });\n        }\n    });\n\n    afterUpdate(() => {\n        if (isFunction($eventAllUpdated) && !helperEvent(display)) {\n            task(() => $eventAllUpdated({view: toViewWithLocalDates($_view)}), 'eau', _tasks);\n        }\n    });\n\n    function createHandler(fn, display) {\n        return !helperEvent(display) && isFunction(fn)\n            ? jsEvent => fn({event: toEventWithLocalDates(event), el, jsEvent, view: toViewWithLocalDates($_view)})\n            : undefined;\n    }\n\n    function createDragHandler(interaction, resize) {\n        return interaction.action\n            ? jsEvent =>\n                $_interaction.action.drag(\n                    event,\n                    jsEvent,\n                    resize,\n                    inPopup ? $_popupDate : null,\n                    [rect(el).top - rect(ancestor(el, 1)).top, dates]\n                )\n            : undefined;\n    }\n\n    export function reposition() {\n        if (!el) {\n            return;\n        }\n        margin = repositionEvent(chunk, longChunks, height(el));\n        if ($dayMaxEvents === true) {\n            hide();\n        } else {\n            hidden = false;\n        }\n    }\n\n    function hide() {\n        let dayEl = ancestor(el, 2);\n        let h = height(dayEl) - height(dayEl.firstElementChild) - footHeight(dayEl);\n        hidden = chunk.bottom > h;\n        let update = false;\n        // Hide or show the event throughout all days\n        for (let date of chunk.dates) {\n            let hiddenEvents = $_hiddenEvents[date.getTime()];\n            if (hiddenEvents) {\n                let size = hiddenEvents.size;\n                if (hidden) {\n                    hiddenEvents.add(chunk.event);\n                } else {\n                    hiddenEvents.delete(chunk.event);\n                }\n                if (size !== hiddenEvents.size) {\n                    update = true;\n                }\n            }\n        }\n        if (update) {\n            $_hiddenEvents = $_hiddenEvents;\n        }\n    }\n\n    function footHeight(dayEl) {\n        let h = 0;\n        for (let i = 0; i < chunk.days; ++i) {\n            h = max(h, height(dayEl.lastElementChild));\n            dayEl = dayEl.nextElementSibling;\n            if (!dayEl) {\n                break;\n            }\n        }\n        return h;\n    }\n\n    // Onclick handler\n    $: onclick = createHandler($eventClick, display);\n</script>\n\n<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n<article\n    bind:this={el}\n    class=\"{classes}\"\n    {style}\n    role=\"{onclick ? 'button' : undefined}\"\n    tabindex=\"{onclick ? 0 : undefined}\"\n    on:click={onclick || undefined}\n    on:keydown={onclick && keyEnter(onclick)}\n    on:mouseenter={createHandler($eventMouseEnter, display)}\n    on:mouseleave={createHandler($eventMouseLeave, display)}\n    on:pointerdown={!helperEvent(display) && createDragHandler($_interaction)}\n>\n    <div class=\"{$theme.eventBody}\" use:setContent={content}></div>\n    <svelte:component\n        this={$_interaction.resizer}\n        {event}\n        on:pointerdown={createDragHandler($_interaction, 'x')}\n    />\n</article>\n","<script>\n    import {getContext, tick} from 'svelte';\n    import {ancestor, rect, setContent, outsideEvent, keyEnter, toISOString} from '@event-calendar/core';\n    import Event from './Event.svelte';\n\n    let {buttonText, theme, _interaction, _intlDayPopover, _popupDate, _popupChunks} = getContext('state');\n\n    let el;\n    let style = '';\n\n    function position() {\n        let dayEl = ancestor(el, 1);\n        let bodyEl = ancestor(dayEl, 3);\n        let popupRect = rect(el);\n        let dayRect = rect(dayEl);\n        let bodyRect = rect(bodyEl);\n        style = '';\n\n        let left;\n        if (popupRect.width >= bodyRect.width) {\n            left = bodyRect.left - dayRect.left;\n            let right = dayRect.right - bodyRect.right;\n            style += `right:${right}px;`;\n        } else {\n            left = (dayRect.width - popupRect.width) / 2;\n            if (dayRect.left + left < bodyRect.left) {\n                left = bodyRect.left - dayRect.left;\n            } else if (dayRect.left + left + popupRect.width > bodyRect.right) {\n                left = bodyRect.right - dayRect.left - popupRect.width;\n            }\n        }\n        style += `left:${left}px;`;\n\n        let top;\n        if (popupRect.height >= bodyRect.height) {\n            top = bodyRect.top - dayRect.top;\n            let bottom = dayRect.bottom - bodyRect.bottom;\n            style += `bottom:${bottom}px;`;\n        } else {\n            top = (dayRect.height - popupRect.height) / 2;\n            if (dayRect.top + top < bodyRect.top) {\n                top = bodyRect.top - dayRect.top;\n            } else if (dayRect.top + top + popupRect.height > bodyRect.bottom) {\n                top = bodyRect.bottom - dayRect.top - popupRect.height;\n            }\n        }\n        style += `top:${top}px;`;\n    }\n\n    function reposition() {\n        // Skip the first call (el is not defined at this time)\n        if (el) {\n            style = '';\n            // Let chunks to update/mount then position the popup\n            tick().then(() => {\n                if ($_popupChunks.length) {\n                    position();\n                } else {\n                    close();\n                }\n            });\n        }\n    }\n\n    $: if ($_popupChunks) {\n        // Fire reposition only on popup chunks change\n       reposition();\n    }\n\n    function close(e) {\n        $_popupDate = null;\n    }\n\n    function handlePointerDownOutside(e) {\n        close();\n        $_interaction.action?.noClick();\n    }\n</script>\n\n<div\n    bind:this={el}\n    class=\"{$theme.popup}\"\n    {style}\n    use:outsideEvent={'pointerdown'}\n    on:pointerdown|stopPropagation\n    on:pointerdownoutside={handlePointerDownOutside}\n>\n    <div class=\"{$theme.dayHead}\">\n        <time datetime=\"{toISOString($_popupDate, 10)}\" use:setContent={$_intlDayPopover.format($_popupDate)}></time>\n        <!-- svelte-ignore a11y-missing-attribute -->\n        <a\n            role=\"button\"\n            tabindex=\"0\"\n            aria-label={$buttonText.close}\n            on:click|stopPropagation={close}\n            on:keydown={keyEnter(close)}\n        >&times;</a>\n    </div>\n    <div class=\"{$theme.events}\">\n        {#each $_popupChunks as chunk (chunk.event)}\n            <Event {chunk} inPopup />\n        {/each}\n    </div>\n</div>","<script>\n    import {getContext, tick} from 'svelte';\n    import {datesEqual, setContent, createEventChunk, addDay, cloneDate, assign, setPayload, toISOString,\n        keyEnter, runReposition, isFunction} from '@event-calendar/core';\n    import Event from './Event.svelte';\n    import Popup from './Popup.svelte';\n\n    export let date;\n    export let chunks;\n    export let bgChunks;\n    export let longChunks;\n    export let iChunks = [];\n    export let dates;\n\n    let {date: currentDate, dayMaxEvents, highlightedDates, moreLinkContent, theme,\n        _hiddenEvents, _intlDayCell, _popupDate, _popupChunks, _today, _interaction, _queue} = getContext('state');\n\n    let el;\n    let dayChunks, dayBgChunks;\n    let isToday;\n    let otherMonth;\n    let highlight;\n    let hiddenEvents = new Set();  // hidden events of this day\n    let moreLink = '';\n    let showPopup;\n    let refs = [];\n\n    $: $_hiddenEvents[date.getTime()] = hiddenEvents;\n\n    $: {\n        dayChunks = [];\n        dayBgChunks = bgChunks.filter(bgChunk => datesEqual(bgChunk.date, date));\n        hiddenEvents.clear();\n        hiddenEvents = hiddenEvents;\n        for (let chunk of chunks) {\n            if (datesEqual(chunk.date, date)) {\n                dayChunks.push(chunk);\n                // if ($dayMaxEvents !== false && dayChunks.length > $dayMaxEvents) {\n                // \tchunk.hidden = true;\n                // }\n            }\n        }\n    }\n\n    $: isToday = datesEqual(date, $_today);\n    $: {\n        otherMonth = date.getUTCMonth() !== $currentDate.getUTCMonth();\n        highlight = $highlightedDates.some(d => datesEqual(d, date));\n    }\n\n    $: if ($_hiddenEvents && hiddenEvents.size) {  // make Svelte update this block on $_hiddenEvents update\n        let text = '+' + hiddenEvents.size + ' more';\n        if ($moreLinkContent) {\n            moreLink = isFunction($moreLinkContent)\n                ? $moreLinkContent({num: hiddenEvents.size, text})\n                : $moreLinkContent;\n        } else {\n            moreLink = text;\n        }\n    }\n\n    $: showPopup = $_popupDate && datesEqual(date, $_popupDate);\n\n    $: if (showPopup && longChunks && dayChunks) {\n        // Let chunks to reposition then set popup chunks\n        tick().then(setPopupChunks);\n    }\n\n    // dateFromPoint\n    $: if (el) {\n        setPayload(el, () => ({allDay: true, date, resource: undefined, dayEl: el}));\n    }\n\n    function showMore() {\n        $_popupDate = date;\n    }\n\n    function setPopupChunks() {\n        let nextDay = addDay(cloneDate(date));\n        let chunks = dayChunks.concat(longChunks[date.getTime()]?.chunks || []);\n        $_popupChunks = chunks\n            .map(chunk => assign({}, chunk, createEventChunk(chunk.event, date, nextDay), {days: 1, dates: [date]}))\n            .sort((a, b) => a.top - b.top);\n    }\n\n    export function reposition() {\n        runReposition(refs, dayChunks);\n    }\n</script>\n\n<div\n    bind:this={el}\n    class=\"{$theme.day} {$theme.weekdays?.[date.getUTCDay()]}{isToday ? ' ' + $theme.today : ''}{otherMonth ? ' ' + $theme.otherMonth : ''}{highlight ? ' ' + $theme.highlight : ''}\"\n    role=\"cell\"\n    on:pointerleave={$_interaction.pointer?.leave}\n    on:pointerdown={$_interaction.action?.select}\n>\n    <time\n        class=\"{$theme.dayHead}\"\n        datetime=\"{toISOString(date, 10)}\"\n        use:setContent={$_intlDayCell.format(date)}\n    ></time>\n    <div class=\"{$theme.bgEvents}\">\n        {#each dayBgChunks as chunk (chunk.event)}\n            <Event {chunk}/>\n        {/each}\n    </div>\n    <!-- Pointer -->\n    {#if iChunks[2] && datesEqual(iChunks[2].date, date)}\n        <div class=\"{$theme.events}\">\n            <Event chunk={iChunks[2]}/>\n        </div>\n    {/if}\n    <!-- Drag & Resize -->\n    {#if iChunks[0] && datesEqual(iChunks[0].date, date)}\n        <div class=\"{$theme.events} {$theme.preview}\">\n            <Event chunk={iChunks[0]}/>\n        </div>\n    {/if}\n    <div class=\"{$theme.events}\">\n        {#each dayChunks as chunk, i (chunk.event)}\n            <Event {chunk} {longChunks} {dates} bind:this={refs[i]} />\n        {/each}\n    </div>\n    {#if showPopup}\n        <Popup/>\n    {/if}\n    <div class=\"{$theme.dayFoot}\">\n        {#if hiddenEvents.size}\n            <!-- svelte-ignore a11y-missing-attribute -->\n            <!-- svelte-ignore a11y-missing-content -->\n            <a\n                role=\"button\"\n                tabindex=\"0\"\n                aria-haspopup=\"true\"\n                on:click|stopPropagation={showMore}\n                on:keydown={keyEnter(showMore)}\n                on:pointerdown|stopPropagation\n                use:setContent={moreLink}\n            ></a>\n        {/if}\n    </div>\n</div>\n","<script>\n    import {getContext, tick} from 'svelte';\n    import {cloneDate, addDay, eventIntersects, bgEvent, createEventChunk, prepareEventChunks,\n        runReposition, debounce} from '@event-calendar/core';\n    import Day from './Day.svelte';\n\n    export let dates;\n\n    let {_events, _iEvents, _queue2, _hiddenEvents,\n        resources, filterEventsWithResources, hiddenDays, theme} = getContext('state');\n\n    let chunks, bgChunks, longChunks, iChunks = [];\n\n    let start;\n    let end;\n    let refs = [];\n\n    $: {\n        start = dates[0];\n        end = addDay(cloneDate(dates.at(-1)));\n    }\n\n    let debounceHandle = {};\n    function reposition() {\n        debounce(() => runReposition(refs, dates), debounceHandle, _queue2);\n    }\n\n    $: {\n        chunks = [];\n        bgChunks = [];\n        for (let event of $_events) {\n            if (eventIntersects(event, start, end, $filterEventsWithResources ? $resources : undefined)) {\n                let chunk = createEventChunk(event, start, end);\n                if (bgEvent(event.display)) {\n                    if (event.allDay) {\n                        bgChunks.push(chunk);\n                    }\n                } else {\n                    chunks.push(chunk);\n                }\n            }\n        }\n        prepareEventChunks(bgChunks, $hiddenDays);\n        longChunks = prepareEventChunks(chunks, $hiddenDays);\n        // Run reposition only when events get changed\n        reposition();\n    }\n\n    $: iChunks = $_iEvents.map(event => {\n        let chunk;\n        if (event && eventIntersects(event, start, end)) {\n            chunk = createEventChunk(event, start, end);\n            prepareEventChunks([chunk], $hiddenDays);\n        } else {\n            chunk = null;\n        }\n        return chunk;\n    });\n\n    $: if ($_hiddenEvents) {\n        // Schedule reposition during next update\n        tick().then(reposition);\n    }\n</script>\n\n<div class=\"{$theme.days}\" role=\"row\">\n    {#each dates as date, i}\n        <Day {date} {chunks} {bgChunks} {longChunks} {iChunks} {dates} bind:this={refs[i]} />\n    {/each}\n</div>\n\n<svelte:window on:resize={reposition}/>\n","<script>\n    import {getContext} from 'svelte';\n    import Week from './Week.svelte';\n\n    let {_bodyEl, _viewDates, _hiddenEvents, dayMaxEvents, hiddenDays, theme} = getContext('state');\n\n    let weeks;\n    let days;\n\n    $: {\n        weeks = [];\n        days = 7 - $hiddenDays.length;\n        $_hiddenEvents = {};\n        $dayMaxEvents;\n        for (let i = 0; i < $_viewDates.length / days; ++i) {\n            let dates = [];\n            for (let j = 0; j < days; ++j) {\n                dates.push($_viewDates[i * days + j]);\n            }\n            weeks.push(dates);\n        }\n    }\n</script>\n\n<div\n    bind:this={$_bodyEl}\n    class=\"{$theme.body}{$dayMaxEvents === true ? ' ' + $theme.uniform : ''}\"\n>\n    <div class=\"{$theme.content}\">\n        {#each weeks as dates}\n            <Week {dates}/>\n        {/each}\n    </div>\n</div>\n","import {writable} from 'svelte/store';\nimport {btnTextMonth, intl, themeView} from '@event-calendar/core';\nimport {days} from './stores.js';\nimport View from './View.svelte';\n\nexport default {\n\tcreateOptions(options) {\n\t\toptions.dayMaxEvents = false;\n\t\toptions.dayCellFormat = {day: 'numeric'};\n\t\toptions.dayPopoverFormat = {month: 'long', day: 'numeric', year: 'numeric'};\n\t\toptions.moreLinkContent = undefined;\n\t\t// Common options\n\t\toptions.buttonText.dayGridMonth = 'month';\n\t\toptions.buttonText.close = 'Close';\n\t\toptions.theme.uniform = 'ec-uniform';\n\t\toptions.theme.dayFoot = 'ec-day-foot';\n\t\toptions.theme.popup = 'ec-popup';\n\t\toptions.view = 'dayGridMonth';\n\t\toptions.views.dayGridMonth = {\n\t\t\tbuttonText: btnTextMonth,\n\t\t\tcomponent: View,\n\t\t\tdayHeaderFormat: {weekday: 'short'},\n\t\t\tdayHeaderAriaLabelFormat: {weekday: 'long'},\n\t\t\tdisplayEventEnd: false,\n\t\t\tduration: {months: 1},\n\t\t\ttheme: themeView('ec-day-grid ec-month-view'),\n\t\t\ttitleFormat: {year: 'numeric', month: 'long'}\n\t\t};\n\t},\n\n\tcreateStores(state) {\n\t\tstate._days = days(state);\n\t\tstate._intlDayCell = intl(state.locale, state.dayCellFormat);\n\t\tstate._intlDayPopover = intl(state.locale, state.dayPopoverFormat);\n\t\tstate._hiddenEvents = writable({});\n\t\tstate._popupDate = writable(null);\n\t\tstate._popupChunks = writable([]);\n\t}\n}\n","import {derived} from 'svelte/store';\nimport {cloneDate, addDay, subtractDay} from '@event-calendar/core';\n\nexport function days(state) {\n    return derived([state.date, state.firstDay, state.hiddenDays], ([$date, $firstDay, $hiddenDays]) => {\n        let days = [];\n        let day = cloneDate($date);\n        let max = 7;\n        // First day of week\n        while (day.getUTCDay() !== $firstDay && max) {\n            subtractDay(day);\n            --max;\n        }\n        for (let i = 0; i < 7; ++i) {\n            if (!$hiddenDays.includes(day.getUTCDay())) {\n                days.push(cloneDate(day));\n            }\n            addDay(day);\n        }\n\n        return days;\n    });\n}\n","<script>\n\timport { onMount } from 'svelte'; \n    import Calendar from '@event-calendar/core';\n    import DayGrid from '@event-calendar/day-grid';\n\timport config from './config.json';\n\n\t// event-calendar code\n\tlet current_user = '130002';\n\tlet current_view = 'self';\n\tlet plugins = [DayGrid];\n    let options = {\n        events: [],\n\t\teventClick: function(info) {\n\t\t\t// Populate modal with event details\n\t\t\tdocument.getElementById('modalEventTitle').innerText = formatDate(info.event.start)\n\t\t\tdocument.getElementById('modalEventDetails').innerText = info.event.title.slice(-6) + \" for employee no. \" + info.event.title.slice(0,6)\n\t\t\t// Display the modal\n\t\t\tdocument.getElementById('eventModal').style.display = 'block';\n    \t},\n\t};\n\n\tfunction updateView(view) {\n\t\tcurrent_view = view;\n\t\tfetchArrangements()\n\t}\n\n\tfunction closeModal() {\n\t\tdocument.getElementById('eventModal').style = 'display:none;'\n\t}\n\n\tlet arrangementsArray = [];\n\n\tasync function fetchArrangements() {\n\t\tconst endpoint = current_view === 'self' \n\t\t\t? `${config.base_url}/employee_view_own_ttbl?eid=${current_user}`\n\t\t\t: `${config.base_url}/employee_view_team_ttbl?eid=${current_user}`;\n\n\t\ttry {\n\t\t\tconst response = await fetch(endpoint);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Failed to fetch data');\n\t\t\t}\n\t\t\tconst data = await response.json();\n\n\t\t\t// Reset arrays before pushing new data\n\t\t\tarrangementsArray = [];\n\t\t\toptions.events = [];\n\n\t\t\tarrangementsArray.push(...data.arrangements);\n\t\t\tfor (let a of arrangementsArray) {\n\t\t\t\tlet arrangementDate = new Date(Date.parse(a.date));\n\t\t\t\toptions.events.push({\n\t\t\t\t\ttitle: a.employee_id + \": \" + a.shift.toUpperCase() + \" WFH\",\n\t\t\t\t\tstart: arrangementDate,\n\t\t\t\t\tend: arrangementDate,\n\t\t\t\t\tallDay: true\n\t\t\t\t});\n\t\t\t}\n\t\t\tarrangementsArray = [...arrangementsArray];\n\t\t\tarrangementsArray.sort((a, b) => new Date(a.date) - new Date(b.date));\n\t\t\toptions.events = [...options.events];\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching data:', error);\n\t\t}\n\t}\n\n\tonMount(() => {\n    \tfetchArrangements();\n  \t});\n\n\tfunction formatDate(date) {\n\t\tlet dateObj = new Date(Date.parse(date))\n\t\tlet day = dateObj.getDate(); // Gets the day of the month (1-31)\n\t\tlet month = dateObj.getMonth() + 1; // Gets the month (0-11) and add 1 to make it (1-12)\n\t\tlet year = dateObj.getFullYear(); // Gets the full year (e.g., 2024)\n\t\t// Format day and month to ensure two digits (e.g., \"05\" instead of \"5\")\n\t\tif (day < 10) {\n\t\t\tday = '0' + day;\n\t\t}\n\t\tif (month < 10) {\n\t\t\tmonth = '0' + month;\n\t\t}\n\t\t// Return formatted date string\n\t\treturn `${day}/${month}/${year}`;\n\t}\n</script>\n\n<main>\n\t<h1>Your Timetable</h1>\n\t<div class=\"current-view-container\">\n\t\t<div class=\"current-view-box {current_view === 'self' ? 'active' : ''}\" on:click={() => updateView('self')}>Self</div>\n\t\t<div class=\"current-view-box {current_view === 'team' ? 'active' : ''}\" on:click={() => updateView('team')}>Team</div>\n\t  </div>\n\t<Calendar {plugins} {options} />\n\t<ul>\n\t\t{#each arrangementsArray as arrangement}\n\t\t\t<li>\n\t\t\t\t<b>{formatDate(arrangement.date)}</b><br>\n\t\t\t\tEmployee No. {arrangement.employee_id}: {arrangement.shift.toUpperCase()} WFH\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n\t<div id=\"eventModal\" class=\"modal\" style=\"display:none;\">\n\t\t<div class=\"modal-content\">\n\t\t\t<span class=\"close-button\" on:click=\"{closeModal}\">&times;</span>\n\t\t\t<h2><span id=\"modalEventTitle\"></span></h2>\n\t\t\t<p id=\"modalEventDetails\"></p>\n\t\t</div>\n\t</div>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\tli {\n\t\tlist-style-type: none;\n\t\tborder: solid 1px grey;\n\t\tpadding: 5px;\n\t\tmargin: 5px\n\t}\n\n\th1 {\n\t\ttext-align: start;\n\t\tfont-weight: bold;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n\n\t.modal {\n\t\tdisplay: none; /* Hidden by default */\n\t\tposition: fixed; /* Stay in place */\n\t\tz-index: 1; /* Sit on top */\n\t\tleft: 0;\n\t\ttop: 0;\n\t\twidth: 100%; /* Full width */\n\t\theight: 100%; /* Full height */\n\t\toverflow: auto; /* Enable scroll if needed */\n\t\tbackground-color: rgb(0,0,0); /* Fallback color */\n\t\tbackground-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n\t}\n\n\t.modal-content {\n\t\tbackground-color: #fefefe;\n\t\tmargin: 15% auto; /* 15% from the top and centered */\n\t\tpadding: 20px;\n\t\tborder: 1px solid #888;\n\t\twidth: 80%; /* Could be more or less, depending on screen size */\n\t}\n\n\t.close-button {\n\t\tcolor: #aaa;\n\t\tfloat: right;\n\t\tfont-size: 28px;\n\t\tfont-weight: bold;\n\t}\n\n\t.close-button:hover,\n\t.close-button:focus {\n\t\tcolor: black;\n\t\ttext-decoration: none;\n\t\tcursor: pointer;\n\t}\n\n\t/* Box styles for current view selection */\n\t.current-view-container {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start; /* Distribute space between boxes */\n\t\tmargin: 20px 0;\n\t\tmax-width: 200px; /* Set a max width for the container */\n\t}\n\n\t.current-view-box {\n\t\tflex: 1;\n\t\tpadding: 10px;\n\t\tborder: 1px solid #ccc;\n\t\tcursor: pointer;\n\t\ttext-align: center;\n\t\ttransition: background-color 0.3s;\n\t}\n\n\t.current-view-box:hover {\n\t\tbackground-color: #f0f0f0;\n\t}\n\n\t.active {\n\t\tbackground-color: #f0f0f0;\n\t}\n</style>","<script>\n    import { onMount } from 'svelte';  // Import onMount to fetch data when component mounts\n  \n    let tableData = [];  // Data array for the table\n    let showModal = false;\n    let selectedRow = null;\n    let current_user= '130002'; \n  \n    // Function to fetch table data from the API\n    async function fetchTableData() {\n        try {\n            const response = await fetch(`http://127.0.0.1:5000/pending-arrangements?eid=${current_user}`); // Update the URL as needed\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            tableData = await response.json(); // Parse the JSON response\n        } catch (error) {\n            console.error('Error fetching table data:', error);\n        }\n    }\n  \n    async function cancelRequest() {\n  \n    try {\n      const response = await fetch(`http://127.0.0.1:5000/arrangements/cancel?aID=${selectedRow.arrangementId}`, {\n          method: 'POST'\n      });\n  \n    if (!response.ok) throw new Error(\"Failed to cancel request\");\n  \n      // Refresh the table data after rejecting\n      await fetchTableData();\n      tableData = tableData.filter(person => person.status == \"pending\")\n      showModal = false;\n      selectedRow = null;\n  \n    } catch (error) {\n      console.error(\"Error updating status:\", error);\n    }\n   }\n  \n    // Call fetchTableData when the component is first loaded\n    onMount(fetchTableData);\n  \n    function editPage(person) {\n        alert(`Editing shift!`);\n    }\n  \n    function cancelAlert(person) {\n        selectedRow = person;\n        showModal = true;\n    }\n  \n    function closeModal() {\n        showModal = false;\n        selectedRow = null;\n    }\n  \n  </script>\n  \n  <main>\n    <h1>Pending Arrangements</h1>\n  \n    <!-- Render the table dynamically -->\n    <table>\n        <thead>\n            <tr>\n                <th>Arrangement ID</th>\n                <th>Date Created</th>\n                <th>Date of Shift</th>\n                <th>Employee ID</th>\n                <th>Notes</th>\n                <th>Shift</th>\n                <th>Status</th>\n                <th>Supervisors</th>\n                <th>Action</th>\n            </tr>\n        </thead>\n        <tbody>\n            {#each tableData as person}\n                <tr>\n  \n                    <td>{person.arrangementId}</td>\n                    <td>{person.created_at}</td>\n                    <td>{person.date}</td>\n                    <td>{person.employee_id}</td>\n                    <td>{person.notes}</td>\n                    <td>{person.shift}</td>\n                    <td>{person.status}</td>\n                    <td>{person.supervisors}</td>\n                    <td>\n                        <button on:click={() => editPage(person)}>Edit</button>\n                        <button on:click={() => cancelAlert(person)}>Cancel</button>\n                    </td>\n                </tr>\n            {/each}\n        </tbody>\n    </table>\n  \n    <!-- Modal -->\n    {#if showModal}\n        <div class=\"overlay\">\n            <div class=\"modal-content\">\n                <p>Are you sure you want to cancel this request?</p>\n                <button on:click={cancelRequest}>Yes</button>\n                <button on:click={closeModal}>Back</button>\n            </div>\n        </div>\n    {/if}\n  </main>\n  \n  <style>\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-top: 20px;\n        color: purple;\n    }\n    th, td {\n        padding: 10px;\n        border: 1px solid #ddd;\n        text-align: center;\n    }\n    th {\n        background-color: lavenderblush;\n    }\n    button {\n        background-color: purple; \n        border: black;\n        color: white;\n        padding: 15px 32px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 10px;\n    }\n    button:hover {\n        background-color: lavenderblush; \n        border: 2px solid purple;\n        color: purple;\n        padding: 15px 32px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 10px;\n    }\n    h1 {\n        color: black;\n        font-family: 'Times New Roman', Times, serif;\n    }\n    \n    .overlay {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100vw;\n      height: 100vh;\n      background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 10;\n   }\n  \n  /* Modal content styling */\n   .modal-content {\n      color:black;\n      background-color: #fff;\n      padding: 20px;\n      border-radius: 8px;\n      width: 300px;\n      text-align: center;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n   }\n  \n  </style>\n  ","<script>\n    import { writable } from 'svelte/store';\n\n    // Import components\n    import ApplyModal from \"./Apply.svelte\";\n    import WithdrawalRequest from \"./WithdrawalRequest.svelte\";\n    import HRViewTimetable from './HRViewTimetable.svelte';\n    import ManagerTimetable from './ManagerTimetable.svelte';\n    import EmployeeTimetable from './EmployeeTimetable.svelte';\n    import CancelRequest from './CancelRequest.svelte';\n\n    import { jwtToken, userClaims } from './authstore';\n    import Login from './Login.svelte';\n\n    let isLoggedIn = $jwtToken !== '';\n    $: isLoggedIn = $jwtToken !== '';\n\n    // Claims access\n    const userId = $userClaims.sub;\n    const role = $userClaims.role;\n    const firstName = $userClaims.first_name;\n    const lastName = $userClaims.last_name;\n\n    // Create stores for route management\n    const currentRoute = writable('/');\n    const isRouteTransitioning = writable(false);\n\n    // Modal state\n    let showModal = false;\n\n    // Modal handlers\n    const openModal = () => {\n        showModal = true;\n        console.log(\"Modal opened\");\n    };\n    const closeModal = () => {\n        showModal = false;\n        console.log(\"Modal closed\");\n    };\n\n    // Enhanced navigation function with transition handling\n    const navigateTo = async (path) => {\n        if ($currentRoute === path) return;\n        \n        isRouteTransitioning.set(true);\n        await new Promise(resolve => setTimeout(resolve, 100)); // Small delay for transition\n        currentRoute.set(path);\n        isRouteTransitioning.set(false);\n    };\n\n    // Handle browser back/forward buttons\n    if (typeof window !== 'undefined') {\n        window.onpopstate = (event) => {\n            if (event.state?.path) {\n                navigateTo(event.state.path);\n            }\n        };\n    }\n</script>\n\n{#if isLoggedIn}\n<main>\n    <!-- Top Navigation -->\n    <nav class=\"top-nav\">\n        <button \n            class=\"nav-link\" \n            on:click={() => navigateTo('/withdrawal-request')}\n            class:active={$currentRoute === '/withdrawal-request'}\n        >\n            Withdrawals\n        </button>\n        <button \n            class=\"nav-link\" \n            on:click={() => navigateTo('/apply')}\n            class:active={$currentRoute === '/apply'}\n        >\n            Apply\n        </button>\n    </nav>\n\n    <!-- Main Content with Route Rendering -->\n    <div class=\"content\" class:transitioning={$isRouteTransitioning}>\n        {#if $currentRoute === '/withdrawal-request'}\n            <WithdrawalRequest />\n        {:else if $currentRoute === '/apply'}\n            <ApplyModal on:close={closeModal} />\n        {:else if $currentRoute === '/employee-timetable'}\n            <EmployeeTimetable />\n        {:else if $currentRoute === '/hr-view-timetable'}\n            <HRViewTimetable />\n        {:else if $currentRoute === '/manager-timetable'}\n            <ManagerTimetable />\n        {:else if $currentRoute === '/cancel-request'}\n            <CancelRequest />\n        {/if}\n    </div>\n\n    <!-- Apply Button to Open Modal -->\n    <button class=\"apply-button\" on:click={openModal}>Apply</button>\n\n    <!-- Apply Modal with close event listener -->\n    {#if showModal}\n        <ApplyModal on:close={closeModal} />\n    {/if}\n\n    <!-- Navigation Buttons -->\n    <nav class=\"function-nav\">\n        <button \n            on:click={() => navigateTo('/employee-timetable')}\n            class:active={$currentRoute === '/employee-timetable'}\n        >\n            View Own Schedule\n        </button>\n    \n        <button \n            on:click={() => navigateTo('/withdrawal-request')}\n            class:active={$currentRoute === '/withdrawal-request'}\n        >\n            Withdrawal Request\n        </button>\n        <button \n            on:click={() => navigateTo('/hr-view-timetable')}\n            class:active={$currentRoute === '/hr-view-timetable'}\n        >\n            HR Timetable\n        </button>\n        <button \n            on:click={() => navigateTo('/cancel-request')}\n            class:active={$currentRoute === '/cancel-request'}\n        >\n            Cancel Request\n        </button>\n        <button \n            on:click={() => navigateTo('/manager-timetable')}\n            class:active={$currentRoute === '/manager-timetable'}\n        >\n            Manager Timetable\n        </button>\n    </nav>\n</main>\n{:else}\n<Login />\n{/if}\n\n<style>\n    main {\n        font-family: Verdana, sans-serif;\n        padding: 1rem;\n        max-width: 1200px;\n        margin: 0 auto;\n    }\n\n    .top-nav {\n        margin-bottom: 2rem;\n        padding: 1rem 0;\n        border-bottom: 1px solid #eaeaea;\n        display: flex;\n        gap: 1rem;\n    }\n\n    .nav-link {\n        background: none;\n        border: none;\n        color: #007bff;\n        font-size: 1rem;\n        padding: 0.5rem 1rem;\n        cursor: pointer;\n        transition: all 0.2s;\n        border-radius: 0.375rem;\n    }\n\n    .nav-link:hover {\n        background-color: #f0f4ff;\n    }\n\n    .nav-link.active {\n        background-color: #007bff;\n        color: white;\n    }\n\n    .content {\n        margin: 2rem 0;\n        opacity: 1;\n        transition: opacity 0.2s ease-in-out;\n    }\n\n    .content.transitioning {\n        opacity: 0;\n    }\n\n    .apply-button {\n        padding: 0.75rem 1.5rem;\n        font-size: 1.125rem;\n        background-color: #4caf50;\n        color: white;\n        border: none;\n        border-radius: 0.375rem;\n        cursor: pointer;\n        transition: background-color 0.2s;\n    }\n\n    .apply-button:hover {\n        background-color: #45a049;\n    }\n\n    .function-nav {\n        display: flex;\n        gap: 1rem;\n        flex-wrap: wrap;\n        margin: 2rem 0;\n    }\n\n    .function-nav button {\n        padding: 0.5rem 1rem;\n        background-color: #f0f0f0;\n        border: 1px solid #ddd;\n        border-radius: 0.375rem;\n        cursor: pointer;\n        transition: all 0.2s;\n        font-size: 0.875rem;\n    }\n\n    .function-nav button:hover {\n        background-color: #e0e0e0;\n    }\n\n    .function-nav button.active {\n        background-color: #e0e0e0;\n        border-color: #aaa;\n    }\n\n    @media (max-width: 768px) {\n        .top-nav {\n            flex-direction: column;\n        }\n\n        .function-nav {\n            flex-direction: column;\n        }\n        \n        .function-nav button {\n            width: 100%;\n        }\n    }\n</style>\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","set_store_value","ret","set","action_destroyer","action_result","destroy","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","stop_propagation","stopPropagation","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","mounting","option","__value","selected","undefined","selectedIndex","select_value","selected_option","querySelector","toggle_class","toggle","classList","construct_svelte_component","props","current_component","set_current_component","get_current_component","Error","onMount","on_mount","afterUpdate","after_update","onDestroy","createEventDispatcher","type","detail","cancelable","bubbles","e","createEvent","initCustomEvent","custom_event","slice","defaultPrevented","getContext","context","get","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","seen_callbacks","Set","flushidx","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","destroy_block","lookup","outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","updates","child_ctx","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","customElement","new_on_destroy","map","filter","destroy_component","filtered","targets","indexOf","flush_render_callbacks","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","skip_bound","root","ready","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","splice","$set","$$props","obj","$$set","keys","subscriber_queue","readable","start","writable","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","started","values","pending","cleanup","sync","result","unsubscribers","t2_value","create_if_block_3","create_if_block_4","create_if_block_6","create_if_block_8","if_block1","create_if_block_2","div","button","t2","t13_value","if_block","create_if_block_1","div0","h3","p0","strong0","p1","strong1","p2","strong2","p3","strong3","div1","button0","button1","t13","textarea","create_if_block_7","input0","checked","input0_checked_value","input1","input1_checked_value","label0","label1","create_if_block_5","Date","toISOString","split","h2","label","button0_class_value","button0_aria_pressed_value","button1_class_value","button1_aria_pressed_value","t4_value","join","h4","t4","includes","strong","create_if_block","dispatch","step","selectedDate","isDateValid","applicationType","selectedDays","selectedDayOption","showPartDayOptions","selectedHalfDay","reason","reviewMode","toggleDay","day","alert","handleKeyPress","preventDefault","selectHalfDay","period","$$invalidate","now","diffInMilliseconds","getTime","trim","currentTarget","async","applicationData","employee_id","date","days","halfDay","status","response","fetch","method","headers","body","JSON","stringify","ok","json","error","message","span","formatDate","if_block0","half_day","if_block2","span_class_value","div3","div2","t6","t6_value","t10","t10_value","h1","dateValue","seconds","isNaN","toLocaleDateString","year","month","err","console","withdrawalRequests","loading","employeeId","localStorage","getItem","fetchWithdrawalRequests","config","Accept","log","app","requestWithdrawal","applicationId","errorData","application","id","t8_value","t16_value","each_value","button2","button2_class_value","div9","div5","p4","div4","div8","div6","p5","p6","p7","div7","div10","div11","t8","t16","svg","path","select0","select1","select2","option0","label2","option1","option2","option3","label3","option4","option5","t","t_value","t0_value","department","team","email","t0","main","t5","t5_value","departments","allEmployees","searchQuery","selectedDepartment","selectedStatus","selectedDateRange","startDate","endDate","isRequestInProgress","showFilters","activeTab","API_BASE_URL","fetchInitialData","deptResponse","empResponse","all","deptData","empData","employees","updateEmployeeStatus","newStatus","filters","filteredEmployees","search","dateRange","employee","toLowerCase","searchTerm","country","position","some","field","String","officeEmployees","emp","remoteEmployees","totalEmployees","officePercentage","toFixed","remotePercentage","jwtToken","userClaims","decodeJWT","token","base64","replace","jsonPayload","decodeURIComponent","atob","charCodeAt","toString","parse","form","password","loginUser","setItem","removeItem","t9","t9_value","filterTimeout","currentDepartment","getFilterState","fetchEmployees","isAuthenticated","params","URLSearchParams","Authorization","$jwtToken","debouncedFetchEmployees","clearTimeout","setTimeout","currentUser","$userClaims","keyEnter","setContent","content","actions","innerText","domNodes","replaceChildren","html","innerHTML","outsideEvent","handlePointerDown","jsEvent","contains","dispatchEvent","CustomEvent","createDate","_fromLocalDate","str","parts","match","UTC","Number","_fromISOString","createDuration","exp","part","parseInt","pow","hours","getUTCHours","minutes","getUTCMinutes","getUTCSeconds","weeks","week","years","months","hour","minute","second","inWeeks","cloneDate","addDuration","duration","x","setUTCFullYear","getUTCFullYear","getUTCMonth","setUTCMonth","subtractDay","setUTCDate","getUTCDate","setUTCSeconds","addDay","setMidnight","setUTCHours","toLocalDate","len","substring","datesEqual","date1","dates2","every","date2","prevClosestDay","diff","getUTCDay","noTimePart","nextDate","prevDate","hiddenDays","subtractDuration","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","assign","args","object","max","isFunction","identity","debounce","handle","queueStore","queue","flushDebounce","task","tasks","tag","className","attrs","el","rect","getBoundingClientRect","ancestor","up","parentElement","height","payloadProp","Symbol","hasPayload","getElementWithPayload","y","elementsFromPoint","shadowRoot","shadowEl","toViewWithLocalDates","view","currentStart","currentEnd","activeStart","activeEnd","listView","startsWith","eventId","createEvents","resourceIds","toArrayProp","allDay","end","title","editable","startEditable","durationEditable","display","extendedProps","backgroundColor","color","textColor","classNames","styles","propName","createEventSources","source","events","url","trimEnd","toUpperCase","extraParams","createEventChunk","createTimeElement","timeText","chunk","theme","eventTime","createEventClasses","eventClassNames","_view","toEventWithLocalDates","dateFn","_cloneEvent","prepareEventChunks","chunks","longChunks","prevChunk","sort","sortEventChunks","dates","sorted","maxEnd","at","prev","runReposition","refs","ref","reposition","eventIntersects","resources","resource","helperEvent","previewEvent","ghostEvent","pointerEvent","bgEvent","btnTextMonth","btnText","themeView","createResources","eventBackgroundColor","eventTextColor","findResource","find","intl","locale","format","$locale","$format","Intl","DateTimeFormat","intlRange","formatRange","formatRangeToParts","sources","processed","_getParts","State","constructor","plugins","allDayContent","allDaySlot","buttonText","today","customButtons","datesSet","dayHeaderFormat","weekday","dayHeaderAriaLabelFormat","dateStyle","displayEventEnd","eventAllUpdated","eventClick","eventColor","eventContent","eventDidMount","eventMouseEnter","eventMouseLeave","eventSources","eventTimeFormat","filterEventsWithResources","filterResourcesWithEvents","firstDay","flexibleSlotTimeLimits","headerToolbar","center","highlightedDates","lazyFetching","nowIndicator","resourceLabelContent","resourceLabelDidMount","selectable","scrollTime","slotDuration","slotEventOverlap","slotHeight","slotLabelFormat","slotMaxTime","slotMinTime","slotWidth","active","bgEvents","buttonGroup","calendar","compact","dayHead","eventBody","eventTitle","extra","header","hiddenScroll","highlight","icon","line","lines","otherMonth","sidebar","sidebarTitle","time","toolbar","weekdays","withScroll","titleFormat","viewDidMount","views","plugin","createOptions","parsers","createParsers","parseOpts","entries","_queue","_queue2","_tasks","_auxiliary","_dayGrid","$view","_currentRange","state","$date","$duration","$firstDay","currentRange","_activeRange","$_currentRange","$slotMaxTime","$_dayGrid","nextClosestDay","start2","activeRange","_fetchedRange","_events","abortController","fetching","debounceHandle","$events","$eventSources","$_activeRange","$_fetchedRange","$lazyFetching","$loading","abort","AbortController","stopLoading","failure","success","concat","startStr","endStr","signal","credentials","catch","_now","interval","setInterval","clearInterval","_today","$_now","_intlEventTime","_intlSlotLabel","_intlDayHeader","_intlDayHeaderAL","_intlTitle","_bodyEl","_scrollable","_viewTitle","$_intlTitle","viewTitle","_viewDates","$hiddenDays","viewDates","createView","view2","_viewComponent","_interaction","_iEvents","_iClasses","_iClass","_set","validKey","_get","createStores","defOpts","mergeOpts","opts","filterOpts","newView","override","hasOwnProperty","button_class_value","click","apply","arguments","button_aria_label_value","button_title_value","h2_class_value","buttons","isToday","div_class_value","current","each_value_1","each_blocks","nav","nav_class_value","sections","$headerToolbar","group","$datesSet","$_view","runDatesSet","div_role_value","prevOptions","setOption","recheckScrollable","$_bodyEl","$_scrollable","scrollHeight","clientHeight","$_queue","$_queue2","$_events","idx","findIndex","$_interaction","action","unselect","dayEl","info","div0_class_value","div1_class_value","div2_class_value","_days","switch_value","resizer","article","classes","inPopup","dayMaxEvents","_hiddenEvents","_popupDate","onclick","margin","hidden","createHandler","$eventDidMount","$eventAllUpdated","bgColor","resourceBackgroundColor","$resources","$eventBackgroundColor","$eventColor","txtColor","resourceTextColor","$eventTextColor","marginTop","_margin","_dates","$theme","$_iClasses","$eventClassNames","toDate","fromDate","createEventContent","$displayEventEnd","$eventContent","$_intlEventTime","$eventClick","interaction","resize","drag","$_popupDate","top","bottom","longChunk","offset","repositionEvent","$dayMaxEvents","h","firstElementChild","lastElementChild","nextElementSibling","footHeight","hiddenEvents","$_hiddenEvents","hide","$$value","a_aria_label_value","close","popup","_intlDayPopover","_popupChunks","$_popupChunks","left","bodyEl","popupRect","dayRect","bodyRect","width","right","noClick","Event","event_changes","preview","get_key_1","if_block3","time_class_value","dayFoot","pointer","leave","dayChunks","dayBgChunks","bgChunks","iChunks","currentDate","moreLinkContent","_intlDayCell","showPopup","moreLink","setPopupChunks","nextDay","bgChunk","$_today","$currentDate","$highlightedDates","$moreLinkContent","num","payload","setPayload","$filterEventsWithResources","$_iEvents","uniform","$_viewDates","j","DayGrid","dayCellFormat","dayPopoverFormat","dayGridMonth","View","shift","li","br","ul","span0","closeModal","current_user","getElementById","dateObj","current_view","updateView","fetchArrangements","arrangementsArray","endpoint","arrangements","arrangementDate","arrangementId","created_at","notes","t12_value","t14_value","supervisors","tr","td0","td1","td2","td3","td4","td5","td6","td7","td8","t12","t14","table","thead","tbody","tableData","showModal","selectedRow","fetchTableData","cancelAlert","person","button3","button4","button5","button6","button7","nav0","nav1","isLoggedIn","sub","role","first_name","last_name","currentRoute","isRouteTransitioning","navigateTo","$currentRoute","window","onpopstate"],"mappings":"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","x_google_ignoreList":[0,1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]}